(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    122490,       3909]
NotebookOptionsPosition[    114225,       3675]
NotebookOutlinePosition[    114846,       3697]
CellTagsIndexPosition[    114803,       3694]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Lab 12:
Momentum and Angular Momentum in Two Dimensions\
\>", "Title",
 CellChangeTimes->{{3.5987081845346518`*^9, 3.598708184878922*^9}, {
  3.648402494127404*^9, 3.6484024953712187`*^9}},
 TextAlignment->Center,
 TextJustification->0],

Cell["\<\
In this lab you will film pucks on an air table and use the video to study \
the conservation of momentum and angular momentum in two dimensions. \
\>", "Text"],

Cell[CellGroupData[{

Cell["Theory", "Subsection"],

Cell[CellGroupData[{

Cell["Basics", "Subsubsection",
 CellChangeTimes->{{3.648465423952608*^9, 3.6484654245400352`*^9}}],

Cell[TextData[{
 "Earlier we studied one dimension collisions on an air track. Now, we want \
to study two dimensional collisions on an air table, which are much more \
complicated than one dimensional ones. To begin, with we will assume that our \
pucks are point particles. Of course, they are actually disks and in the next \
section we will take their shape and size into account. \n\nA general two \
body, two dimensional collision is shown in the figure below. We will choose \
our coordinates so that the mass ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "2"], TraditionalForm]]],
 " is initially at rest and at the origin; we can do this without loss of \
generality since there is always a reference frame in which ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "2"], TraditionalForm]]],
 " is at rest (this is true if ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "2"], TraditionalForm]]],
 "is ",
 StyleBox["not",
  FontSlant->"Italic"],
 " accelerating, which we will assume to be case). We will also point our \
axes so that the mass ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["m", "1"], TraditionalForm]]],
 "has an initial velocity only in the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " direction, again, without loss of generality.  \n\nThe parameter ",
 Cell[BoxData[
  FormBox["b", TraditionalForm]]],
 " in the diagram is called the \[OpenCurlyDoubleQuote]impact parameter\
\[CloseCurlyDoubleQuote]. The solid circles represent the particles before \
the collision, while the dashed circles represent the particles after the \
collision. The classical collision shown below is an example of a more \
general physical interaction called ",
 StyleBox["scattering",
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{{3.441624004716*^9, 3.441624060512875*^9}, {
  3.441624123466*^9, 3.441624283387875*^9}, {3.648465441719617*^9, 
  3.648465457720366*^9}, {3.648465535775729*^9, 3.648465568678071*^9}, {
  3.648465616963025*^9, 3.648465697809306*^9}}],

Cell[GraphicsData["PostScript", "\<\
%!
%%Creator: Mathematica
%%AspectRatio: .95238 
MathPictureStart
/Mabs {
Mgmatrix idtransform
Mtmatrix dtransform
} bind def
/Mabsadd { Mabs
3 -1 roll add
3 1 roll add
exch } bind def
%% Graphics
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10  scalefont  setfont
% Scaling calculations
0.5 0.476191 0.476191 0.476191 [
[.02381 .46369 -6 -9 ]
[.02381 .46369 6 0 ]
[.2619 .46369 -12 -9 ]
[.2619 .46369 12 0 ]
[.7381 .46369 -9 -9 ]
[.7381 .46369 9 0 ]
[.97619 .46369 -3 -9 ]
[.97619 .46369 3 0 ]
[1.025 .47619 0 -6 ]
[1.025 .47619 10 6 ]
[.4875 0 -12 -4.5 ]
[.4875 0 0 4.5 ]
[.4875 .2381 -24 -4.5 ]
[.4875 .2381 0 4.5 ]
[.4875 .71429 -18 -4.5 ]
[.4875 .71429 0 4.5 ]
[.4875 .95238 -6 -4.5 ]
[.4875 .95238 0 4.5 ]
[.5 .97738 -5 0 ]
[.5 .97738 5 12 ]
[ 0 0 0 0 ]
[ 1 .95238 0 0 ]
] MathScale
% Start of Graphics
1 setlinecap
1 setlinejoin
newpath
0 g
.25 Mabswid
[ ] 0 setdash
.02381 .47619 m
.02381 .48244 L
s
[(-1)] .02381 .46369 0 1 Mshowa
.2619 .47619 m
.2619 .48244 L
s
[(-0.5)] .2619 .46369 0 1 Mshowa
.7381 .47619 m
.7381 .48244 L
s
[(0.5)] .7381 .46369 0 1 Mshowa
.97619 .47619 m
.97619 .48244 L
s
[(1)] .97619 .46369 0 1 Mshowa
0 .47619 m
1 .47619 L
s
gsave
1.025 .47619 -61 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
(x) show
69.000 13.000 moveto
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.5 0 m
.50625 0 L
s
[(-1)] .4875 0 1 0 Mshowa
.5 .2381 m
.50625 .2381 L
s
[(-0.5)] .4875 .2381 1 0 Mshowa
.5 .71429 m
.50625 .71429 L
s
[(0.5)] .4875 .71429 1 0 Mshowa
.5 .95238 m
.50625 .95238 L
s
[(1)] .4875 .95238 1 0 Mshowa
.5 0 m
.5 .95238 L
s
gsave
.5 .97738 -66 -4 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
(y) show
69.000 13.000 moveto
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
0 0 m
1 0 L
1 .95238 L
0 .95238 L
closepath
clip
newpath
% Start of user PostScript
/mathtops {
gsave
MBeginOrig
moveto
MEndOrig
currentpoint
grestore
} bind def
/MAtocoords {
mathtops 4 2 roll mathtops
4 copy pop pop
3 -1 roll sub
/arry exch def
exch sub
/arrx exch def
arrx dup mul
arry dup mul
add sqrt
/arrl exch def
translate
} bind def
/MAarrowhead1 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto fill
-0.05 0.0125 moveto 0 0 lineto
-0.05 -0.0125 lineto
-0.05 0.0125 lineto stroke
} ifelse
grestore
} def
/MAarrowhead2 {
gsave
MAtocoords
arrl 0. eq
{ 0 0 Mdot }
{
arrl arrl scale
[ arrx arrl div
arry arrl div
-1 arry mul arrl div
arrx arrl div
0 0 ]
concat
-0.2 0.05 moveto 0 0 lineto
-0.2 -0.05 lineto fill
-0.2 0.05 moveto 0 0 lineto
-0.2 -0.05 lineto
-0.2 0.05 lineto stroke
} ifelse
grestore
} def
% End of user PostScript
1 1 1 r
.5 Mabswid
.02381 0 m
.06244 .03864 L
.10458 .08077 L
.14415 .12034 L
.18221 .1584 L
.22272 .19891 L
.26171 .2379 L
.30316 .27935 L
.34309 .31928 L
.3815 .35769 L
.42237 .39856 L
.46172 .43791 L
.49955 .47574 L
.53984 .51603 L
.57861 .5548 L
.61984 .59603 L
.65954 .63573 L
.69774 .67393 L
.73838 .71457 L
.77751 .7537 L
.81909 .79528 L
.85916 .83535 L
.89771 .8739 L
.93871 .91491 L
.97619 .95238 L
s
1 0 0 r
newpath
.5 .47619 .05952 0 365.73 arc
s
0 1 0 r
newpath
.14286 .41667 .05952 0 365.73 arc
s
1 0 0 r
[ .01 .01 ] 0 setdash
newpath
.81746 .63492 .05952 0 365.73 arc
s
0 1 0 r
newpath
.7381 .35714 .05952 0 365.73 arc
s
0 g
[ ] 0 setdash
.5 .47619 m
.81746 .63492 L
s
% Start of user PostScript
0 0 0.666667 0.333333 MAarrowhead1
% End of user PostScript
.5 .47619 m
.7381 .35714 L
s
% Start of user PostScript
0 0 0.5 -0.25 MAarrowhead1
% End of user PostScript
gsave
.59524 .5 -66 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(q) show
69.000 13.000 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.59524 .45238 -66 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
%%IncludeResource: font Mathematica1Mono
%%IncludeFont: Mathematica1Mono
/Mathematica1Mono findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(f) show
69.000 13.000 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
.35714 .41667 m
.35714 .47619 L
s
% Start of user PostScript
-0.3 -0.125 -0.3 0 MAarrowhead2
% End of user PostScript
.35714 .47619 m
.35714 .41667 L
s
% Start of user PostScript
-0.3 0 -0.3 -0.125 MAarrowhead2
% End of user PostScript
gsave
.14286 .41667 -68.625 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
(m) show
69.000 14.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 7.125 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
74.250 13.000 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.5 .52381 -68.625 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
(m) show
69.000 14.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 7.125 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
74.250 13.000 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.78571 .35714 -68.625 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
(m) show
69.000 14.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 7.125 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(1) show
74.250 13.000 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.83333 .63492 -68.625 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
/MISOfy
{
    /newfontname exch def
    /oldfontname exch def

    oldfontname findfont
    dup length dict begin
        {1 index /FID ne {def} {pop pop} ifelse} forall
        /Encoding MacintoshRomanEncoding def
        currentdict
    end

    newfontname exch definefont pop
} def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
%%BeginResource: font Courier-MISO
%%BeginFont: Courier-MISO
/Courier /Courier-MISO MISOfy
%%EndFont
%%EndResource
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
(m) show
69.000 14.562 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 7.125 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
(2) show
74.250 13.000 moveto
%%IncludeResource: font Courier-MISO
%%IncludeFont: Courier-MISO
/Courier-MISO findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
gsave
.40476 .44643 -66 -10 Mabsadd m
1 1 Mabs scale
currentpoint translate
0 20 translate 1 -1 scale
/g { setgray} bind def
/k { setcmykcolor} bind def
/p { gsave} bind def
/r { setrgbcolor} bind def
/w { setlinewidth} bind def
/C { curveto} bind def
/F { fill} bind def
/L { lineto} bind def
/rL { rlineto} bind def
/P { grestore} bind def
/s { stroke} bind def
/S { show} bind def
/N {currentpoint 3 -1 roll show moveto} bind def
/Msf { findfont exch scalefont [1 0 0 -1 0 0 ] makefont setfont} bind def
/m { moveto} bind def
/Mr { rmoveto} bind def
/Mx {currentpoint exch pop moveto} bind def
/My {currentpoint pop exch moveto} bind def
/X {0 rmoveto} bind def
/Y {0 exch rmoveto} bind def
63.000 13.000 moveto
%%IncludeResource: font Courier
%%IncludeFont: Courier
/Courier findfont 10.000 scalefont
[1 0 0 -1 0 0 ] makefont setfont
0.000 0.000 0.000 setrgbcolor
0.000 0.000 rmoveto
63.000 13.000 moveto
(b) show
69.000 13.000 moveto
0.000 0.000 rmoveto
1.000 setlinewidth
grestore
% End of Graphics
MathPictureEnd
\
\>"], "Graphics",
 ImageSize->{288, 274.25},
 ImageMargins->{{43, 0}, {0, 0}},
 ImageRegion->{{0, 1}, {0, 
  1}},ImageCache->GraphicsData["CompressedBitmap", "\<\
eJztW/tTFEcQXu7FPQBFBSMHcqCYVAotTRCiEivmhRqQqJXkN1NomcI8ygRM
kaCCqZjkPwjmF5P/9Lx59cwuX8/uAOZVu+XdntNf99fT0zM9O3csLD1YvvvN
0oN7d5ZacytL3y7fu7Pa+vD+Sqep2BVFXa3O60ArEp/bUWTe2p1/7THxJlrs
5w1xKwrIn6phU95ki/wkXs+VaE3cykJQ5EFIvyzeC6JlKwWUaPvdcVLqd/Og
QJu/5aJclItyUS76X4tWxU3WjhIAFcS7bKrwJlbkrRQTRaYWlWPNWuQrPF+J
m9QqYLsNoFukXmx5fWJ1w3tW2k1U4hqeqm2Hp0pxyav2yxGd08mu074gPn3K
w88SqGakbSu9yStOAXgPGbvOK54Biv2g7VqYids8/DSAHwJt87yJuTD4KQA/
DNo+CjNxl4efBPAvwuBDoO0Kb+JqGHySY5Swq2GKTYAL5D4o3+3C7t7RYrqH
5s3ElEyu0mUFOSZuvULyWUa2OgWy4uEtAU1NOQ5EDe1mO/okoxtyTa8IVHVn
brSIcj8A3QBuyLldEy01N6oup4dvFIjQWnQdMMsJWhctt5Sxo2waxNs+zhBN
FcPO9bn67wiwMwDaFoHt5FwXlxwZZECn+TAQDe6Az1xyB4EMePjQgnmNi12B
JlaRo9JrTBOIjoC2BUD1OlGh7cvt3RO8tp0gZcR1FUKLN3JkHpCeINIq0PBU
yt2QHifSesZ5s8CT9tLANzLSjxN9H9BYUlRo1JIPBO4d1Q3UO+RQixxCC1Cv
ltLO6u907Si5hnKhTq7d3Jlrthz2As0JLlbdkZlrUveITgG97y1Fdt8b6hAa
AOTGiKJsm+jGH5OMbJBcXE9xBxUvVAcnKNubxIKe4Uzhaztt/UT0iPcGrcaW
dAiYRQ9/ZYDrI/qNMPoTgOAVQFAFuIoi7cB6iP6Jom9Qr3oAKVpq6mTCf9Sw
D0gPA4drAFcFOJshrYweTMfTxOmiA0frJep2DWR45D8e6QN09tChAfpYBxo1
gCtRBMbC3ZoGJKrHyi773QfKEJS+BbIScPaDxqaK1U2UdhI5u9aiDUwzu79T
oG2ITzO0sqP9Xf2lRAxFApk07Aanr+7ERPoXBsjOK7Tu7EVYnP0hrppDaZ7N
8BFpEAOqd2jb2/CwJTj2g7YqDSmaTSgIVXJRLw5GwbeT8MUkYX+G7A/zWWLK
p96Vy0/74qMjHUFLL6qMKAMQb4U40J6i7IlAE3jnWYFHwVCjlJgEJmyFRLUF
dcvWkQrQqFCO6L2KKbxtO8mSLkn4QEZ6uxijgo/GS+/ZxjUVLt8nyZFDwGwv
dISZCOvJpDeXck5tCmVEuunTGUBwkHMktvVypQ8TVsSlslV5clzNo0icIGj3
InsNg7YVt5PbJwYUXQBtk1xfnHmuL5SHKHNnQVtynJwArGXwQL8KVi1sZHmO
uJv2O6tuoKFOS6MfMk4I+xMS9OxQpoTZDDNrF4YCZ5bZK26EEcWPILdxgNmf
aFNZH/0I+FBNsmVTrlXy5PVxmAk0650RwGHRHOtAV9orcVlnV7wSDaaO8UMA
L+qounOAuyM6m08/K9wjziexlHiMo7HSxcOsHJLmJ6Xx2IQCxA7cS1zG28dV
nfEbxGnmKe+0feq1z/x64J6Y6ET2incVH2UMkCGdqDKsVSEaIpHKPPhFyQiB
1njQKIG+50FjBFrlQccI9B0PmiDQfR70Kmj7mofbU1wPyJ4lf8mD7Nn2Mg86
RSDPN36nCdRUOdemk7fOp0u84hukOEhwNNku8iamyMQBMtFHn2Z5xWlS7AOM
/aDtHG/sLTLWIO5FHn6e4Gh3hvZ4M7yxWTJ2NEzxIikWgaIUIFemeYvvkEW9
mXf0JHKB133X6sZ3Dex282yKMQcuLlnC0G7RY+d98V7lFKd4xUsAbr9KLCp/
dmVRXHWyCHd9mT2Tk7XujFtkSdBB4IWUFECPG2Vs3p4pok3em2FEPWTMySFx
R7tlj20UI2UCP4mipwyP+UWU6pybnpTw/FQH9eBGGLwZ5kxyyokXOs73mLgF
4J7J6en+eyrCHSk6F/esiR8AOFp7Ak3Y2nSeV5wDip4fAl3mJoDkeZtXvAIU
0V7dY2JeTTRT50spdf4/+CvL0N9H5r+t/Md/npiLclEuykW5aA9E9u/6PGVm
E4g8BWKv4Gl/Cfjc6YLE/pWKlf8Bf97IfX5K4flDNfwCbD9Tol+BaCtVlDQo
rmepoqfUZ+fRwglXaD+jrhewETVO\
\>"],ImageRangeCache->{{{0, 143.5}, {136.626, 0}} -> {-1.08095, -1.03598, \
0.00799422, 0.00799422}, {{0, 95.6664}, {91.0832, 0}} -> {-1.08095, -1.03598, \
0.00799422, 0.00799422}, {{0, 172.2}, {163.95, 0}} -> {-1.08095, -1.03598, \
0.00799422, 0.00799422}, {{0, 114.8}, {109.3, 0}} -> {-1.08095, -1.03598, \
0.00799422, 0.00799422}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Point Particles", "Subsubsection"],

Cell[TextData[{
 "In a scattering experiment you usually know the initial velocities of the \
particles and you want to calculate, or measure the final velocities of the \
particles. In a one dimensional collision we can calculate the final \
velocities of the particles if the collision is elastic. If the collision is \
inelastic we need to measure the final velocity of at least one of the \
particles, or we must know something about the dynamics of the collision. As \
we will see the two dimensional case is more complicated.\n\tWhat can we say \
about the collision from the kinematics alone? Well, it\[CloseCurlyQuote]s \
fair to say that we don't know anything about the forces acting on the \
particles during the collision.  In general, all we know is that momentum, \
angular momentum and the total energy of the system is conserved. Knowing \
that the total energy is conserved is not very useful since there is no \
guarantee that the mechanical energy is conserved. In fact mechanical energy \
will be conserved only in an elastic collision. \n\t\nFrom momentum \
conservation we know that \n\t",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["p", 
     RowBox[{"1", "i", " ", "x"}]], "=", 
    RowBox[{
     RowBox[{
      SubscriptBox["p", 
       RowBox[{"1", "f"}]], " ", 
      RowBox[{"cos", "(", "\[Phi]", ")"}]}], " ", "+", " ", 
     RowBox[{
      SubscriptBox["p", 
       RowBox[{"2", "f"}]], " ", 
      RowBox[{"cos", "(", "\[Theta]", ")"}]}]}]}], TraditionalForm]]],
 " and  ",
 Cell[BoxData[
  FormBox[
   RowBox[{"0", "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["p", 
       RowBox[{"1", "f"}]], " ", 
      RowBox[{"sin", "(", "\[Phi]", ")"}]}], "+", 
     RowBox[{
      SubscriptBox["p", 
       RowBox[{"2", "f"}]], " ", 
      RowBox[{"sin", "(", "\[Theta]", ")"}]}]}]}], TraditionalForm]]],
 "\t (1).\nTranslating this into ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " code gives:"
}], "Text",
 CellChangeTimes->{{3.44162443699725*^9, 3.441624455544125*^9}, {
  3.441624499106625*^9, 3.44162450105975*^9}, {3.441624547512875*^9, 
  3.441624551919125*^9}, {3.4722523442390003`*^9, 3.4722523497530003`*^9}, {
  3.648480377557908*^9, 3.648480387109949*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pxEquation", "=", 
   RowBox[{
    RowBox[{"m1", " ", "v1i"}], "==", 
    RowBox[{
     RowBox[{"m2", " ", "v2f", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"m1", " ", "v1f", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pyEquation", "=", 
   RowBox[{"0", "\[Equal]", 
    RowBox[{
     RowBox[{"m2", " ", "v2f", " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{"m1", " ", "v1f", " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.648480407275003*^9, 3.648480407936667*^9}}],

Cell[TextData[{
 "Notice that we have four unknowns (two angles and two speeds) and only two \
equations. Of course, we have not yet conserved angular momentum; maybe that \
will be useful.  Recall that for a point particle ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["L",
     FontWeight->"Bold"], "=", 
    RowBox[{
     StyleBox["r",
      FontWeight->"Bold"], " ", "\[Cross]", 
     StyleBox["p",
      FontWeight->"Bold"]}]}], TraditionalForm]]],
 " where",
 StyleBox[" ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FontWeight->"Bold"],
 " is the distance that the particle is from the origin. \n\nSo (see the \
figure above), the initial angular momentum is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["L", "i"], "=", 
    RowBox[{
     RowBox[{"-", "b"}], " ", 
     SubscriptBox["m", "1"], " ", 
     SubscriptBox["v", 
      RowBox[{"1", "i"}]], 
     StyleBox[" ",
      FontWeight->"Bold"], 
     StyleBox[
      OverscriptBox["z", "^"],
      FontWeight->"Bold"]}]}], TraditionalForm]]],
 ". Since the velocities and motion of the particles are in the x-y plane \
their angular momentum is in the z direction. The final angular momentum of \
the first particle  is \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "1"], " ", 
    RowBox[{
     SubscriptBox["v", 
      RowBox[{"1", "f"}]], "(", 
     RowBox[{
      RowBox[{
       SubscriptBox["r", "1"], "  ", 
       RowBox[{"sin", "(", "\[Phi]", ")"}]}], "-", " ", 
      RowBox[{
       SubscriptBox["r", "1"], " ", 
       RowBox[{"cos", "(", "\[Phi]", ")"}]}]}], ")"}], " ", 
    OverscriptBox[
     StyleBox["z",
      FontWeight->"Bold"], 
     StyleBox["^",
      FontWeight->"Bold"]]}], TraditionalForm]]],
 " and the final angular momentum of the second is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["m", "2"], " ", 
    RowBox[{
     SubscriptBox["v", 
      RowBox[{"2", "f"}]], "(", 
     RowBox[{
      RowBox[{
       SubscriptBox["r", "2"], "  ", 
       RowBox[{"sin", "(", "\[Theta]", ")"}]}], "-", " ", 
      RowBox[{
       SubscriptBox["r", "2"], " ", 
       RowBox[{"cos", "(", "\[Theta]", ")"}]}]}], ")"}], " ", 
    OverscriptBox[
     StyleBox["z",
      FontWeight->"Bold"], 
     StyleBox["^",
      FontWeight->"Bold"]]}], TraditionalForm]]],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "1"], "=", 
    RowBox[{
     RowBox[{
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         SubscriptBox["x", "1"], "2"], "+", 
        SuperscriptBox[
         SubscriptBox["y", "1"], "2"]}]], " ", "and", "  ", 
      SubscriptBox["r", "2"]}], "=", 
     SqrtBox[
      RowBox[{
       SuperscriptBox[
        SubscriptBox["x", "2"], "2"], "+", 
       SuperscriptBox[
        SubscriptBox["y", "2"], "2"]}]]}]}], TraditionalForm]]],
 ". Thus\n\n ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"b", " ", 
     SubscriptBox["m", "1"], " ", 
     SubscriptBox["v", 
      RowBox[{"1", "i"}]]}], "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["m", "1"], " ", 
      RowBox[{
       SubscriptBox["v", 
        RowBox[{"1", "f"}]], "(", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["r", "1"], " ", 
         RowBox[{"cos", "(", "\[Phi]", ")"}]}], "-", 
        RowBox[{
         SubscriptBox["r", "1"], "  ", 
         RowBox[{"sin", "(", "\[Phi]", ")"}]}]}], ")"}]}], " ", "+", 
     RowBox[{
      SubscriptBox["m", "2"], " ", 
      RowBox[{
       SubscriptBox["v", 
        RowBox[{"2", "f"}]], "(", 
       RowBox[{
        RowBox[{
         SubscriptBox["r", "2"], " ", 
         RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
        RowBox[{
         SubscriptBox["r", "2"], "  ", 
         RowBox[{"sin", "(", "\[Theta]", ")"}]}]}], " ", ")"}], "  "}]}]}], 
   TraditionalForm]]],
 "\t(2).\n  \nThis does not help us much, since in order to calculate the \
position of a particle we have to know how much time has elapsed since the \
collision.\n\nThus, in general we will have to measure two quantities in the \
final state of a two body collision. These can be any combination of angles \
and or velocities.\n\n",
 StyleBox["If",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 " the collision is elastic, and in general it is not, then kinetic energy is \
conserved:\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], 
     SubscriptBox["m", "1"], 
     SuperscriptBox[
      SubscriptBox["v", 
       RowBox[{"1", "i"}]], "2"]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      SubscriptBox["m", "1"], 
      SuperscriptBox[
       SubscriptBox["v", 
        RowBox[{"1", "f"}]], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], 
      SubscriptBox["m", "2"], " ", 
      SuperscriptBox[
       SubscriptBox["v", 
        RowBox[{"2", "f"}]], "2"]}]}]}], TraditionalForm]]],
 "\t\t\t\t\t\t(3)\n\nThis would give us a third equation to use, and we would \
only need to measure one final state quantity in order to determine all the \
rest."
}], "Text",
 CellChangeTimes->{{3.441625630919125*^9, 3.441625663591*^9}, 
   3.4722523309560003`*^9, {3.648480422439749*^9, 3.648480460236412*^9}, {
   3.648480498884328*^9, 3.6484805670424747`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"KEEquation", "=", 
   RowBox[{
    RowBox[{"m1", " ", 
     SuperscriptBox["v1i", "2"]}], "==", 
    RowBox[{
     RowBox[{"m1", " ", 
      SuperscriptBox["v1f", 
       RowBox[{"2", " "}]]}], "+", 
     RowBox[{"m2", " ", 
      SuperscriptBox["v2f", "2"]}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{3.648480571167557*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"angleEquation", "=", 
  RowBox[{"Simplify", "[", 
   RowBox[{"Eliminate", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"pxEquation", ",", "pyEquation", ",", "KEEquation"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"v1f", ",", "v2f"}], "}"}]}], "]"}], "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"m1", " ", "v1i", " ", 
   RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"m2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"2", " ", "\[Theta]"}], "-", "\[Phi]"}], "]"}]}], "+", 
     RowBox[{"m1", " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}], "\[Equal]", 
  "0"}]], "Output",
 CellChangeTimes->{3.648480580219244*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{"angleEquation", ",", "\[Theta]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Phi]", "-", 
          RowBox[{"ArcSin", "[", 
           FractionBox[
            RowBox[{"m1", " ", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "m2"], "]"}], "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
           RowBox[{"C", "[", "1", "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", "\[Rule]", 
     RowBox[{"ConditionalExpression", "[", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"\[Pi]", "+", "\[Phi]", "+", 
          RowBox[{"ArcSin", "[", 
           FractionBox[
            RowBox[{"m1", " ", 
             RowBox[{"Sin", "[", "\[Phi]", "]"}]}], "m2"], "]"}], "+", 
          RowBox[{"2", " ", "\[Pi]", " ", 
           RowBox[{"C", "[", "1", "]"}]}]}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"C", "[", "1", "]"}], "\[Element]", "Integers"}]}], "]"}]}], 
    "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.6484805832977333`*^9}]
}, Open  ]],

Cell[TextData[{
 "In the above equation, we have eliminated ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", 
    RowBox[{"1", "f"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["v", 
    RowBox[{"2", "f"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and \[Theta], and would only need to measure \[Phi] to completely \
determine the system.  (We could have chosen a different variable to measure \
if we wanted to.)"
}], "Text",
 CellChangeTimes->{{3.648480605203471*^9, 3.6484806434876328`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Disks", "Subsubsection"],

Cell[TextData[{
 "We now relax the assumption that our pucks are point particles and treat \
them as disks (which, of course, is what they are). This means that they can \
rotate, which affects both their angular momentum and their kinetic energy.  \
The linear momentum is unchanged. \n\nTo start, we will assume that the \
stationary disk is not rotating. The initial kinetic energy of the of the \
system is now ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "i"], " ", "=", " ", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      SubscriptBox["m", "1"], " ", 
      SuperscriptBox[
       SubscriptBox["v", 
        RowBox[{"1", "i"}]], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SubscriptBox["I", "1"], " ", 
      SuperscriptBox[
       SubscriptBox["\[Omega]", 
        RowBox[{"1", "i"}]], "2"]}]}]}], TraditionalForm]]],
 " where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["I", "1"], TraditionalForm]]],
 " is the  moment of inertia for the first puck and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", 
    RowBox[{"1", "i"}]], TraditionalForm]]],
 " is the initial angular velocity of the first puck.",
 StyleBox[" \n\nNote that in our case the linear speed and the angular speed \
are not related (",
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{"v", "\[NotEqual]", " ", 
    RowBox[{"\[Omega]", " ", "r"}]}], TraditionalForm]],
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[")!",
  FontColor->RGBColor[1, 0, 0]],
 " \n\nThe final kinetic energy of the system is \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["K", "f"], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      SubscriptBox["m", "1"], " ", 
      SuperscriptBox[
       SubscriptBox["v", 
        RowBox[{"1", "f"}]], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SubscriptBox["I", "1"], " ", 
      SuperscriptBox[
       SubscriptBox["\[Omega]", 
        RowBox[{"1", "f"}]], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SubscriptBox["m", "2"], " ", 
      SuperscriptBox[
       SubscriptBox["v", 
        RowBox[{"2", "f"}]], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SubscriptBox["I", "2"], " ", 
      SuperscriptBox[
       SubscriptBox["\[Omega]", 
        RowBox[{"2", "f"}]], "2"], " "}]}]}], TraditionalForm]]],
 " where the subscripts are self-explanatory. \nThus, if the collision is \
elastic, we have (instead of Eqn. (3) )\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      SubscriptBox["m", "1"], " ", 
      SuperscriptBox[
       SubscriptBox["v", 
        RowBox[{"1", "i"}]], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SubscriptBox["I", "1"], " ", 
      SuperscriptBox[
       SubscriptBox["\[Omega]", 
        RowBox[{"1", "i"}]], "2"]}]}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      SubscriptBox["m", "1"], " ", 
      SuperscriptBox[
       SubscriptBox["v", 
        RowBox[{"1", "f"}]], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], 
      SubscriptBox["I", "1"], " ", 
      SuperscriptBox[
       SubscriptBox["\[Omega]", 
        RowBox[{"1", "f"}]], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], 
      SubscriptBox["m", "2"], " ", 
      SuperscriptBox[
       SubscriptBox["v", 
        RowBox[{"2", "f"}]], "2"]}], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SubscriptBox["I", "2"], " ", 
      SuperscriptBox[
       SubscriptBox["\[Omega]", 
        RowBox[{"2", "f"}]], "2"]}]}]}], TraditionalForm]]],
 "\t(4).\n\nFor disks we know that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", "=", 
    RowBox[{
     FractionBox["1", "2"], "m", " ", 
     SuperscriptBox["R", "2"], " "}]}], TraditionalForm]]],
 "where ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]]],
 " is the mass of the disk and ",
 Cell[BoxData[
  FormBox["R", TraditionalForm]]],
 " is the radius of the disk. \n\nThe angular momentum of the system now has \
contributions from two sources: \n\[CenterDot] The ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["r",
     FontWeight->"Bold"], "\[Cross]", " ", 
    StyleBox["p",
     FontWeight->"Bold"], " "}], TraditionalForm]]],
 "terms, which are akin to \"orbital\" angular momentum about the origin, and \
\n\[CenterDot] The ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", " ", "\[Omega]"}], TraditionalForm]]],
 " terms, which come from the rotation of each puck about their own axis. \n\
",
 StyleBox["It is the sum of these two contributions (orbital + rotational) \
that is conserved; they are not conserved individually!",
  FontVariations->{"Underline"->True}],
 "\n\nThe initial angular momentum of the system is \n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["L", "i"], "=", 
    RowBox[{
     RowBox[{"b", " ", 
      SubscriptBox["m", "1"], " ", 
      SubscriptBox["v", 
       RowBox[{"1", "i"}]]}], "+", 
     RowBox[{
      SubscriptBox["I", "1"], " ", 
      SubscriptBox["\[Omega]", 
       RowBox[{"1", "i"}]], " "}]}]}], TraditionalForm]]],
 " \nwhile the final angular momentum is \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["L", "f"], "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["m", "1"], " ", 
      RowBox[{
       SubscriptBox["v", 
        RowBox[{"1", "f"}]], "(", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["r", "1"], " ", 
         RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
        RowBox[{
         SubscriptBox["r", "1"], "  ", 
         RowBox[{"sin", "(", "\[Theta]", ")"}]}]}], ")"}]}], " ", "+", 
     RowBox[{
      SubscriptBox["m", "2"], " ", 
      RowBox[{
       SubscriptBox["v", 
        RowBox[{"2", "f"}]], "(", 
       RowBox[{
        RowBox[{
         SubscriptBox["r", "2"], " ", 
         RowBox[{"cos", "(", "\[Phi]", ")"}]}], "-", 
        RowBox[{
         SubscriptBox["r", "2"], "  ", 
         RowBox[{"sin", "(", "\[Phi]", ")"}]}]}], " ", ")"}]}], " ", "+", 
     RowBox[{
      SubscriptBox["I", "1"], " ", 
      SubscriptBox["\[Omega]", 
       RowBox[{"1", "f"}]]}], "+", 
     RowBox[{
      SubscriptBox["I", "2"], " ", 
      SubscriptBox["\[Omega]", "2"]}]}]}], TraditionalForm]]],
 ".\nThus, conservation of angular momentum gives\n\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"b", " ", 
      SubscriptBox["m", "1"], " ", 
      SubscriptBox["v", 
       RowBox[{"1", "i"}]]}], "+", 
     RowBox[{
      SubscriptBox["I", "1"], " ", 
      SubscriptBox["\[Omega]", 
       RowBox[{"1", "i"}]]}]}], "=", "  ", 
    RowBox[{
     RowBox[{
      SubscriptBox["m", "1"], " ", 
      RowBox[{
       SubscriptBox["v", 
        RowBox[{"1", "f"}]], "(", " ", 
       RowBox[{
        RowBox[{
         SubscriptBox["r", "1"], " ", 
         RowBox[{"cos", "(", "\[Theta]", ")"}]}], "-", 
        RowBox[{
         SubscriptBox["r", "1"], "  ", 
         RowBox[{"sin", "(", "\[Theta]", ")"}]}]}], ")"}]}], " ", "+", 
     RowBox[{
      SubscriptBox["m", "2"], " ", 
      RowBox[{
       SubscriptBox["v", 
        RowBox[{"2", "f"}]], "(", 
       RowBox[{
        RowBox[{
         SubscriptBox["r", "2"], " ", 
         RowBox[{"cos", "(", "\[Phi]", ")"}]}], "-", 
        RowBox[{
         SubscriptBox["r", "2"], "  ", 
         RowBox[{"sin", "(", "\[Phi]", ")"}]}]}], " ", ")"}]}], " ", "+", 
     RowBox[{
      SubscriptBox["I", "1"], " ", 
      SubscriptBox["\[Omega]", 
       RowBox[{"1", "f"}]]}], "+", 
     RowBox[{
      SubscriptBox["I", "2"], " ", 
      SubscriptBox["\[Omega]", "2"]}]}]}], TraditionalForm]]],
 " (5)"
}], "Text",
 CellChangeTimes->{{3.44162588512225*^9, 3.44162589243475*^9}, {
   3.441625927356625*^9, 3.44162595118475*^9}, 3.472252482782*^9, 
   3.472252515067*^9, {3.472252559659*^9, 3.4722525922650003`*^9}, {
   3.4722526261879997`*^9, 3.47225264674*^9}, {3.472252705473*^9, 
   3.472252755186*^9}, {3.472252827033*^9, 3.472252841848*^9}, {
   3.6484806621269817`*^9, 3.648480850024744*^9}}],

Cell[TextData[{
 "\nThe goal of this experiment is to verify Eqn. (1) and Eqn. (2) for the \
case in which the disks are not spinning and Eqn. (1) and Eqn. (5) if the \
disks are spinning. We also want to check to see if the collisions are \
elastic. We can do this by computing \n",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", " ", "=", " ", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[CapitalDelta]K", 
       SubscriptBox["K", "i"]]}], "=", " ", 
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        SubscriptBox["K", "f"], "-", " ", 
        SubscriptBox["K", "i"]}], 
       SubscriptBox["K", "i"]], " "}]}]}], TraditionalForm]]],
 ". \n\nNote that if the collision is elastic ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", "=", "0"}], TraditionalForm]]],
 " while if the collision is completely inelastic (the particles stick \
together) we have ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Epsilon]", "=", " ", 
    FractionBox[
     SubscriptBox["m", "2"], 
     RowBox[{
      SubscriptBox["m", "1"], "+", 
      SubscriptBox["m", "2"]}]]}], TraditionalForm]]],
 "."
}], "Text",
 CellChangeTimes->{
  3.472252899342*^9, {3.648480889164138*^9, 3.64848094204642*^9}}]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Taking Data", "Subsection",
 CellChangeTimes->{{3.648480980888769*^9, 3.6484809833850718`*^9}, 
   3.64848139888096*^9}],

Cell[CellGroupData[{

Cell["Experimental Setup", "Subsubsection",
 CellChangeTimes->{{3.648480986398234*^9, 3.648480989405805*^9}}],

Cell["\<\
The set up will consist of an air table over which we will position a camera. \
You want to do three experiments, the first should be a collision between a \
stationary puck and a moving puck with neither puck spinning. You should then \
repeat the experiment but this time spin the puck you are going to slide into \
the stationary puck. For your last experiment use two pucks with velcro and \
spin the moving puck. To capture the video we will use a high speed digital \
camera and it's related software.  Once you have your video captured, copy \
the movie to a USB disc. Make sure that you give your file a unique name. You \
can now analyze your data from any computer (Mac or PC) in room 300.\
\>", "Text",
 CellChangeTimes->{{3.4009514092496767`*^9, 3.400951505534573*^9}, {
   3.441626184231625*^9, 3.441626194294125*^9}, {3.441626252762875*^9, 
   3.441626296012875*^9}, {3.4416263680285*^9, 3.441626383544125*^9}, {
   3.472252936898*^9, 3.4722529885179996`*^9}, {3.472253038718*^9, 
   3.472253039046*^9}, 3.4722530816809998`*^9, {3.536411173261469*^9, 
   3.53641118532381*^9}},
 TextAlignment->Left,
 TextJustification->0],

Cell[TextData[StyleBox["Read This!",
 FontSize->18,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 TextAlignment->Center,
 TextJustification->0],

Cell[TextData[{
 "There are three critical points to remember when taking your data:\n1) You \
will need to be able to convert from pixels to meters. To enable you to do \
this you should place a meter stick at the edge of the air table when \
filming. This will allow you to calculate a scale factor for converting \
distances in pixels to meters.\n\n2) Make sure you capture you video at about \
59.37 frames per second. This option is set via the camera's software \
interface. The choice of this frequency eliminates flicker from the lights \
and allows a sufficient number of frames to be analyzed before and after the \
collisions.\n\n3) Make sure that you start filming before you launch the puck \
and keep filming until the pucks hit the edges of the air table. Since ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " allows you to select the start and end frames when analyzing your film you \
can afford to film a few extra seconds (not minutes) of video."
}], "Text",
 CellChangeTimes->{{3.4416264181535*^9, 3.441626563294125*^9}, {
  3.472253120358*^9, 3.4722531213529997`*^9}, {3.5364112149067793`*^9, 
  3.536411216344536*^9}, {3.536411262316743*^9, 3.536411264139604*^9}, {
  3.5369602896213408`*^9, 3.536960308922324*^9}},
 TextAlignment->Left,
 TextJustification->0]
}, Closed]],

Cell[CellGroupData[{

Cell["Obtaining the Data from the Video", "Subsubsection",
 CellChangeTimes->{{3.648481012293131*^9, 3.648481013554599*^9}}],

Cell[TextData[{
 "To obtain the data from your video you  have to  extract the positions of \
the pucks (and their rotation rates) from the video.  Once the video is \
captured you will need to use either the software ImageJ or use ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ". There will be a demonstration using both of these applications at the \
beginning of the class. After the data has been collected we can import the \
data sets into ",
 StyleBox["Mathematica ",
  FontSlant->"Italic"],
 "in the usual way."
}], "Text",
 CellChangeTimes->{{3.441626643294125*^9, 3.441626648481625*^9}, 
   3.47225320296*^9, {3.472253257205*^9, 3.4722532769119997`*^9}, {
   3.5364113579177713`*^9, 3.5364114077685547`*^9}, {3.536411452729314*^9, 
   3.53641158180072*^9}, {3.537011272649365*^9, 3.537011274152884*^9}, {
   3.537187059663816*^9, 3.53718716767675*^9}, {3.537187397677019*^9, 
   3.537187430733637*^9}, {3.648481056202229*^9, 3.6484810627274027`*^9}}],

Cell[TextData[StyleBox["This \[OpenCurlyDoubleQuote]Import\
\[CloseCurlyDoubleQuote] statement is not expected to work; it (and the \
statements below which depend on it) is (are) only included so that you see \
what the code looks like.  Your statements can be based on these, but will be \
changed somewhat.",
 FontSize->24]], "Text",
 CellChangeTimes->{{3.631372033699194*^9, 3.631372089953494*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", "\"\</home/patrick/Lab11\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"YellowPixels", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<YellowPixelData.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagentaPixels", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<YellowPixelData.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GreenPixels", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<YellowPixelData.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CyanPixels", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"\"\<YellowPixelData.txt\>\"", ",", "\"\<Table\>\""}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.537187204535685*^9, 3.537187350289551*^9}}],

Cell["\<\
We will also need the time information.  We capture our data at or near 59.37 \
fps. Your lab instructor will give you the framerate of the camera. You can \
use this framerate to generate a list of accurate time data.\
\>", "Text",
 CellChangeTimes->{{3.44162687124725*^9, 3.441627036544125*^9}, {
  3.44162720574725*^9, 3.44162720705975*^9}, {3.441627411887875*^9, 
  3.441627430762875*^9}, {3.5364148619770412`*^9, 3.536414879336997*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"framerate", "=", "59.37"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TimeData", "=", 
   RowBox[{"Table", "[", 
    RowBox[{"i", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "0", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "YellowPixels", "]"}], "/", "framerate"}], 
        "-", 
        RowBox[{"1", "/", "framerate"}]}], ",", 
       RowBox[{"1", "/", "framerate"}]}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.53718735321474*^9, 3.5371873534894114`*^9}, {
  3.537187441841782*^9, 3.537187445265726*^9}}],

Cell[TextData[{
 "Now that we have the puck positions we can start reconstructing the \
collision. We need to scale may data which is currently in units of pixels. \
From looking at the meter stick that was placed on the air table you can make \
a measurement of the length in pixels of the meter stick. To do this you \
should use the \[OpenCurlyDoubleQuote]Get Coordinates\[CloseCurlyDoubleQuote] \
function in drawing tools of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " (Right click on a frame from your movie and select \
\[OpenCurlyDoubleQuote]Get Coordinates\[CloseCurlyDoubleQuote]). Be sure to \
write down your estimation of the error involved in this measurement (please \
ask if you are unsure of what this \[OpenCurlyQuote]estimation\
\[CloseCurlyQuote] is)."
}], "Text",
 CellChangeTimes->{{3.536961105838366*^9, 3.536961128909371*^9}, {
  3.536961184093391*^9, 3.536961184256254*^9}, {3.536961281864119*^9, 
  3.5369615626257963`*^9}, {3.536962909497106*^9, 3.536962916395726*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"scale", "=", 
   RowBox[{"749.0", "-", "176.0"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.53696160371611*^9, 3.536961615858964*^9}, {
  3.537012302329136*^9, 3.537012332073164*^9}}],

Cell["\<\
If you divide the puck positions by the scale factor you will get the \
positions in meters not pixels.\
\>", "Text",
 CellChangeTimes->{{3.536961584899033*^9, 3.5369615939217587`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"YellowData", "=", 
   RowBox[{"YellowPixels", "/", "scale"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GreenData", "=", 
   RowBox[{"GreenPixels", "/", "scale"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagentaData", "=", 
   RowBox[{"MagentaPixels", "/", "scale"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CyanData", "=", 
   RowBox[{"CyanPixels", "/", "scale"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.536417007986629*^9, 3.536417042640531*^9}, {
  3.536962099981636*^9, 3.53696210390142*^9}}],

Cell[BoxData[
 RowBox[{"plot1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"YellowData", ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Yellow"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.536417131826136*^9, {3.53696300057308*^9, 3.536963004781152*^9}, {
   3.536963048412445*^9, 3.536963049403255*^9}}],

Cell[BoxData[
 RowBox[{"plot2", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"MagentaData", ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Magenta"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.536417137042164*^9, 3.536417143393752*^9}, {
  3.536963040603374*^9, 3.5369630753548117`*^9}}],

Cell["\<\
The plot below should show the collision. The lines do not touch, since the \
positions are for the puck centers and the pucks have a finite size.\
\>", "Text",
 CellChangeTimes->{{3.537187484829858*^9, 3.5371874887646313`*^9}}],

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"plot1", ",", "plot2"}], "]"}]], "Input"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Data Analysis", "Subsection"],

Cell[CellGroupData[{

Cell["Plots", "Subsubsection",
 CellChangeTimes->{{3.648481415202897*^9, 3.648481415668859*^9}}],

Cell[TextData[{
 "We can now check to see if linear momentum is conserved. To do this we need \
to look at the motion in the x and y directions as a function of time. The \
plot above shows ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "(", "x", ")"}], TraditionalForm]]],
 ", we want ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "(", "t", ")"}], " "}], TraditionalForm]]],
 "and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "(", "t", ")"}], TraditionalForm]]],
 ". We can extract the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 " positions using replacement rules. We can then combine the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " (and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 ") data with the our time data."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xYellowPosition", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"TimeData", ",", 
      RowBox[{"YellowData", "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", "x"}]}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yYellowPosition", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"TimeData", ",", 
      RowBox[{"YellowData", "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", "y"}]}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xMagentaPosition", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"TimeData", ",", 
      RowBox[{"MagentaData", "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", "x"}]}]}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"yMagentaPosition", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"TimeData", ",", 
      RowBox[{"MagentaData", "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", "y"}]}]}], "}"}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.536417211476356*^9, 3.536417285270458*^9}, {
  3.536963126593439*^9, 3.536963133600956*^9}}],

Cell["We should plot the data to make sure that it makes sense.", "Text"],

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{"xYellowPosition", ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Yellow Puck\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<x\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"yYellowPosition", ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Yellow Puck\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<y\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"xMagentaPosition", ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Magenta Puck\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<x\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"yMagentaPosition", ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Magenta Puck\>\""}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<t\>\"", ",", "\"\<y\>\""}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.536417298545889*^9, {3.536963143242243*^9, 3.5369631619767447`*^9}, {
   3.648481129412611*^9, 3.648481136841707*^9}}],

Cell[TextData[{
 "The pucks move in a straight line except at the instant of the collision. \
Thus, except at the instant of the collision each puck's position is given by \
",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"x", "(", "t", ")"}], " ", "=", " ", 
     RowBox[{
      SubscriptBox["x", "0"], "+", 
      RowBox[{
       SubscriptBox["v", 
        RowBox[{"0", "x"}]], "t"}]}]}], " ", ",", " ", 
    RowBox[{
     RowBox[{"y", "(", "t", ")"}], "=", 
     RowBox[{
      SubscriptBox["y", "0"], "+", 
      RowBox[{
       SubscriptBox["v", "oy"], "t"}]}]}]}], TraditionalForm]]],
 ". We can describe the motion of the puck  over the entire collision by ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "(", "t", ")"}], " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       SubscriptBox["x", 
        RowBox[{"0", "i"}]], "+", " ", 
       RowBox[{
        SubscriptBox["v", 
         RowBox[{"0", "xi"}]], "t", "  ", "if", " ", "t"}]}], "<", " ", 
      RowBox[{
       SubscriptBox["t", "collision"], " ", "and", "  ", 
       RowBox[{"x", "(", "t", ")"}]}]}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       SubscriptBox["x", 
        RowBox[{"0", "f"}]], "+", " ", 
       RowBox[{
        SubscriptBox["v", 
         RowBox[{"0", "xf"}]], "t", "  ", "if", " ", "t"}]}], ">", 
      RowBox[{
       SubscriptBox["t", "collision"], "."}]}]}]}], TraditionalForm]]],
 "With a similar expression for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"y", "(", "t", ")"}], TraditionalForm]]],
 ". We can use ",
 StyleBox["NonlinearModelFit",
  FontWeight->"Bold"],
 " to find all these parameters including ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["t", "collision"], TraditionalForm]]],
 ".",
 "\n",
 "The model that we will use is just the one given above with ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", 
    RowBox[{"0", "f"}]], TraditionalForm]]],
 "(and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["y", 
    RowBox[{"0", "f"}]], TraditionalForm]]],
 ") chosen so that the puck's path is continuous although not smooth."
}], "Text",
 CellChangeTimes->{{3.400951166988855*^9, 3.4009511822833652`*^9}, {
  3.5370124581405363`*^9, 3.537012489529545*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"model", ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"t", "\[LessEqual]", "tCollision"}], ",", 
     RowBox[{
      RowBox[{"v0i", " ", "t"}], "+", " ", "x0i"}], ",", 
     RowBox[{
      RowBox[{"v0f", " ", "t"}], "+", "x0i", "+", 
      RowBox[{"tCollision", 
       RowBox[{"(", 
        RowBox[{"v0i", "-", "v0f"}], ")"}]}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"xYellowFit", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"xYellowPosition", ",", "model", ",", 
    RowBox[{"{", 
     RowBox[{"v0i", ",", "x0i", ",", "v0f", ",", "tCollision"}], "}"}], ",", 
    "t"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.648481177645217*^9, 3.6484811779866247`*^9}}],

Cell["We can extract the actual function and the parameters with ", "Text",
 CellChangeTimes->{{3.5370125708556557`*^9, 3.537012588566935*^9}}],

Cell[BoxData[{
 RowBox[{"xYellowFit", "[", "t", "]"}], "\[IndentingNewLine]", 
 RowBox[{"xYellowFit", "[", "\"\<ParameterTable\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.536417366930613*^9, 3.536417376066492*^9}, {
  3.537012594297262*^9, 3.537012611451931*^9}, {3.537013114937997*^9, 
  3.537013162634375*^9}}],

Cell[TextData[{
 "This tells us that the collision occurred at \n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"t", "=", 
     RowBox[{"0.374", " ", "seconds"}]}], ",", " ", 
    RowBox[{
     SubscriptBox["v", 
      RowBox[{"0", "xi"}]], "=", 
     RowBox[{"-", "0.111"}]}]}], TraditionalForm]]],
 "m/s and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", 
     RowBox[{"0", "xf"}]], "=", 
    RowBox[{"-", "0.286"}]}], TraditionalForm]]],
 "m/s.\nChecking the fit show that it is very good,"
}], "Text",
 CellChangeTimes->{{3.44146826221875*^9, 3.44146828784375*^9}, {
   3.5370126675762033`*^9, 3.537012722943941*^9}, {3.537013203695953*^9, 
   3.5370132264956713`*^9}, 3.6484811931760902`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plota", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"xYellowFit", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1.4`"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotb", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"xYellowPosition", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plota", ",", "plotb"}], "]"}]}], "Input",
 CellChangeTimes->{{3.536417387265093*^9, 3.536417388224559*^9}, {
   3.537012732890201*^9, 3.5370127386343527`*^9}, 3.537013170651165*^9, {
   3.6484812023228903`*^9, 3.648481207788651*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwV03s01AkbB3BNWe9bvEqKKdZl1ITKloSDviG5LF1kKQmFXou33JMt2uLV
hawUhXa0XbRECBFd3HZcyspmfuOV++VnjJn5jRhyqf29fzznOZ9znnOe85zz
fXROnHYNYMjJyQXT9f+e7WmXnFfovUv4QKVp5U4pzBr02s30LCFaa9zRayJF
YUFn5DzLGeLLhz4+oR2otZX7keUFKuQm5UDb7ohn6DtWCKZ2rGX+vEOKHdFU
QyPrHBYamEHS7VIUJFhIalnJUBrRVuwwkoJccXzZG1YOjDYYHUjXl2LA0cHr
uWshvPxYw//QkEL3LZsd0FQOjvh/W/2VpTBeUdZXUF8Dq0yvmS8MKapso3xM
DevQuFjemjxNIdpfsZx81ogTJR3ucgIKLfdnNd0vN2Nclys62U1B2ej3jUNO
7/CuJJGh1EYhpi3/qs/JdjSmKLTdrqVQdrPg2maXDuSxjz9UK6MA5/yvuas/
4Nd/xRmfy6NQp3+tXu99J6QqAdDOphDlUbuvlN+JOaWG7PEsCpsSZ7rQ34ml
/2TNltFO7fejPCWdWPO1v9iRtlempWaaEg/mQi/diDsUZMvE0YuOPFyod5P/
I5OCQf8BA14dDysj97QG36TQo5RU7tfCA/P0ffZO2r9YvNwtfc+DbhAjQY72
TIa+h+IAD8a+byxvpVNocGEk2HzlwcPZsujVDQre1c96iiwIcPR2pK1Ko7BK
IAi0tCXwWCtd1P0LPb9We6rZiUDJuknHR7QNw5OXjxwhUL+ymGFBu5dTdyv8
OIG3K5R95GnfeDerLfcjgc5vTlX/mUphdlOA6foYAqMLhpH+tAvcs+sexxOQ
zFxt30rbO+G9y84kArOTgs2fr9P7SxW66q8TWCJ2uFJPu6HPyv9gBoHlgryR
FNpnlCIlvXcJrB7+xuYwbQOL/NiQhwQ0+gJ+1aXdG9gvP/eEgK3hpvn8FApp
GWvTksoIOGTF6unQXl6j/iK9mkDyq2VJuckULg6sG+LUEWgfvC7Qoh2+Wcuk
sp3AEcP7Rd9eo+BWx+4amyAQVNNqpnGFgrrYTMdpAx/JvRouaokUcu2Olihm
8NGu+zpK6TyFoinO+7QzXThcsJT7OYSC2uBf63/y7Ya65x07LSc6T9OC8ojd
PVBs2jhBsimw5xbrVsv1YSbxXv8XBfp++96Q5vB+6NUfPNHYIkHFlZoSrx8G
YL/OgqN/VYIlqqE/9TkNovmJ1U32HgkcSlRFAoshlL006gr+KsZOezP1Jo1h
pJxaqHJ+LUaL3ramWytH0Og56Mo9K4b8/ONtplMjEI7+ltRrJobl8Cpb379G
ESt1VbT8LAJzzYGumEYS/zbVcDQuE+HuLiX9gLwx2Gq+0eFGiMB9ylncnSPA
+V3nS6e2iCAyZsU+SB6Hdq9+eqBgAi+KNxR3hwhRqlmifPb3CWyJWgxi+E7g
t9sH97D8J2C/3a1vwUaEn5+9VQ1iTeAYI2c+TkeMZmdTk5khIZjrqnIoFQlO
61QrfcsR4pzBDzMmUxIszWBeHPAWwsbaL9gkkv4Lu7SiXUwhsn7sfm4+SoG4
NRRtxh9H6Hpn/hJ3KXT8N6TG3B4HM4xdbf2nFC3/ueDjemgca2zrYoN3T+K4
WkVrk8o4hiu5C4rVk/BYWEbx3wqwrbLRNdz4Eyp8bP2NLgvQYXwpsfb+Jyz1
84rUdRBg76GC2MuaUyi6d93yKUMAJckNZ/PUKThcyM7l147BVTVisvDLFL7v
yXRzuDiGoJ6XnllnplEYVfjmoNUYeLpNnNCxaSwW3m2aWSBhJa6PDhyfhkS4
PIw/T+JB1WsX34lpDOjHMKvmSIQdeD6/n5oG96FrUOwsCcW4Rx5Gs9O4cVdB
cfETCeuuBGWxggybUsL2M4QknqRaxwezZTgUYsdT7CKx+qiVu5++DHvzS+NE
BInYjeZbjhrKYD6mxW7jkbB/+V23k5EMWv5zZ1I/kBgc1zI1MJVBcPQpU6Wd
hPreL+KxvTLEf888psYlEb9qrrHfQYawK/+Vn6VzMvpxOofvJIM/91Mhv4HE
swiRU9M+GRxt277cqSOx797HR3nuMqhaXMrVeEWiLIR/nnNYBoWzlMNiDYn1
Zh/cMj1lmKs4Ju2pJjHW1spI8pahb7uZDaeKxP4sblecrwwdoQ/H4ytJVATU
F0efkKGxSCXd9zkJjW2vk075y1A5EW9hXUHi0sIL75MnZSgwEA3plJP4G/Q9
dss=
      "]]}}, {{}, 
    {RGBColor[1, 0, 0], PointBox[CompressedData["
1:eJwt03s0lGkcB3BrXSZitYnKUbHSxUpalzrJF6dCxiaRFCpJa0skuol1lnS3
WY6TQRdtNfbYqT2lXDaXas6mVY1D2pIdzfWd+4xxGXPRtu3zx3Pe8/zx/s77
/r6fr1tqVuweczMzs6SP57/n44ClDzNxDbXPz2wLX6zB//ffEflwotjPWQOP
2I4aD24LbHTOx3xpGrziTrM182nHkTwqOuyDGrlPcr+O/IkN3Vn5Og6lJu/3
Yv2vTVxOqxo0t/qY2Px+5NxzeqO8oSbz3sAnPm9Yd1wN06W0zV9av8N4i7s9
PUaN0OJ3ovEwLqYX7OlJmqGGnTBkY07TMOw/c/2j+LmKzH8P1+9abK1+UeHY
6ZleGd3vkbfNLjclXwWft8aPE3loqDaxlseoIPQSWe0c4oEZ/ao3aLEKm142
87Zo+KCmGB5X+5Xk+wTgzbzmndaoRHvOufZoSyHMMzN2FRYryf8J0bCovImd
qMRSpxTG2jkieOhuswW+SgzvDaeFXBehLeztt6ApUdWy/PBqbzEKg+tCaVwF
6LZzBQEPxDjEmvvG4oEC5smfx64IpWD+uJ5RXaZAM0ve4f0Xhcgfz6wPTlfg
gNmA95J4CXa7bFu2MFhB9iXBxRf6jqZZCgxeZ05bkCHFpqSwigyFHOVj5Udc
tFJULi6ghTyRIzw8X+hUIAOHx0kKrJWT/crhtXVfyvw8Oe5Ko7vsyuUIOnbx
MZMuR0ZQoM80FwXut6+ROXjKMb9sQZ3FDQXEW9icBpOM5K2EjWVj6uQrGc75
ao8ampV4+lq3q4glI3mpcGFOdq1jqQy6fnbcSI8Kj4rSPUt2yJBQkfD+sJca
8c53ZhcFyrAiiH4pN1uNG/OcY8IdZCRfNRLulln2U1JQF/ytsvVqzK4P657R
JSV5axDVO32WI0OKy9x5uftKNLCtYoavPigl+WsgutIQUR0lRZwvjZduP4IT
WduNdl9JiYcR+KXXlGoNEtgUazamXhrBxcHmc4J+CfExglVGVzteowSd/W8f
JrtrwWI6zYs6KUFNwcvc7Xu18A9NsFKkSHDY84lXYqMWo+lsvSJAQjxpsWqn
NPCmgwTeR3+rjgsYxerbHhZsiiK+RtHB7GvLfESB311lHdM5irX8D1mpNRTx
NgaV5SDn2iEK1S5FeVEbxrC9lTG0N4oi/sYQYTr9T7AnhY2ZGfz1/WOo59Tf
fGkSE4/jaOkp2Z3zWgzLjthNYSnjKGK1Vahui4nPccQvmXGn74wYbQ5BHWuo
cUw029BK08TE6wSq1i2xbgkS42DqQu9VOROYO5Szv3KmmPidQETPsx82qEVY
dM++xs84gTq3+JWNf4qIZx0YJcFF3KsiDFnqaMtLdRjanU+3Oy4ivnWIWLBG
VLRZhE8cHCYhGPzQSXmLiPdJnH9xsjLAWoTIhmcCT8YkeLe6OnnDQuJ/Eu0c
3UBfqxBmhrux7h56JO2o/P5KhZD0QQ+bZIvC7ANC3KfXdbqy9HCb0p5ojhSS
fujRGrqnap+7EPsvly6bs9IAVTK9pdAgIH0xwP/6ccbQgADu6qxax0cGbHiQ
ldLNEpD+GDHVS1l/c1aAv0MTbRzoRqgdmeb30wSkT0YkcjqeekCAsoqwo7YD
RrDqdnUtnS0g/TKBK+j7wnaMj7WfwJngf34o0e85n/TNBMOtiXSKyYc+YFac
udQEPxRvtS7mk/5NIfcU8+eUZD7unJ7qMh2aQntnCPvZSj7+BQyn5N0=
      "]]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0.74},
  PlotRange->{{0, 1.4}, {0.7408608867347842, 1.0756995978684312`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Input",
 CellChangeTimes->{{3.537023376449334*^9, 3.537023376490589*^9}}],

Cell[TextData[{
 "We can now do the same thing for the ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 " position and for the yellow puck."
}], "Text",
 CellChangeTimes->{{3.537013188312009*^9, 3.537013193943007*^9}}],

Cell[BoxData[
 RowBox[{"yYellowFit", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"yYellowPosition", ",", "model", ",", 
    RowBox[{"{", 
     RowBox[{"v0i", ",", "x0i", ",", "v0f", ",", "tCollision"}], "}"}], ",", 
    "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.442251356006814*^9, 3.442251358838516*^9}, {
  3.536417407666334*^9, 3.5364174165143003`*^9}, {3.537012839003661*^9, 
  3.537012863562789*^9}, {3.537013239787698*^9, 3.5370132419308443`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotc", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"yYellowFit", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1.4`"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotd", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"yYellowPosition", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plotc", ",", "plotd"}], "]"}]}], "Input",
 CellChangeTimes->{{3.536417421073003*^9, 3.536417424944627*^9}, {
   3.537012875306417*^9, 3.5370128775465*^9}, 3.53701324460287*^9, {
   3.6484812233110847`*^9, 3.648481229034791*^9}}],

Cell["Now we should do the same analysis for the magenta puck", "Text",
 CellChangeTimes->{{3.537013270506966*^9, 3.537013293862504*^9}}],

Cell[BoxData[
 RowBox[{"xMagentaFit", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"xMagentaPosition", ",", "model", ",", 
    RowBox[{"{", 
     RowBox[{"v0i", ",", "x0i", ",", "v0f", ",", "tCollision"}], "}"}], ",", 
    "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.4422513634069147`*^9, 3.44225136648669*^9}, {
  3.536417505236289*^9, 3.5364175062425833`*^9}, {3.5370129610996027`*^9, 
  3.53701298201075*^9}, {3.537013316202711*^9, 3.537013323498557*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plote", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"xMagentaFit", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1.4`"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plotf", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"xMagentaPosition", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plote", ",", "plotf"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.536417520632408*^9, {3.537012992714299*^9, 3.537012998042287*^9}, 
   3.537013337946748*^9, {3.648481239023548*^9, 3.648481243589467*^9}}],

Cell["Now for the magenta pucks y data:", "Text",
 CellChangeTimes->{{3.537013034407892*^9, 3.537013049030861*^9}, {
  3.5370133517194767`*^9, 3.537013355590589*^9}}],

Cell[BoxData[
 RowBox[{"yMagentaFit", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"yMagentaPosition", ",", "model", ",", 
    RowBox[{"{", 
     RowBox[{"v0i", ",", "x0i", ",", "v0f", ",", "tCollision"}], "}"}], ",", 
    "t"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.44225137113515*^9, 3.442251374454899*^9}, {
  3.5364175243932343`*^9, 3.536417525169056*^9}, {3.53701305316352*^9, 
  3.5370130715630617`*^9}, {3.53701336010711*^9, 3.537013362475072*^9}}],

Cell[TextData[{
 "Which gives an initial velocity of zero and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["v", 
     RowBox[{"0", "fyLarge"}]], "=", 
    RowBox[{"-", "0.41", " "}]}], TraditionalForm]]],
 "m/s. The fit is good as well."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotg", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"yMagentaFit", "[", "t", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "1.4`"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ploth", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"yMagentaPosition", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plotg", ",", "ploth"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.53641752927964*^9, {3.537013076426162*^9, 3.537013077610134*^9}, 
   3.5370133697225723`*^9, {3.648481270914469*^9, 3.648481277104392*^9}}],

Cell["Finally, to summarize we have :", "Text",
 CellChangeTimes->{{3.5370134534478703`*^9, 3.5370134670947523`*^9}, 
   3.537013605703228*^9}],

Cell[BoxData[{
 RowBox[{"Print", "[", "\"\<Yellow disk x fit\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"xYellowFit", "[", "\"\<ParameterTable\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Yellow disk y fit\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"yYellowFit", "[", "\"\<ParameterTable\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Magenta disk x fit\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"xMagentaFit", "[", "\"\<ParameterTable\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Magenta disk y fit\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"yMagentaFit", "[", "\"\<ParameterTable\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.53701347194279*^9, 3.537013595725222*^9}, 
   3.648481282046506*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Linear Momentum", "Subsubsection",
 CellChangeTimes->{{3.648481388502729*^9, 3.648481390176108*^9}}],

Cell[TextData[{
 "When I weighed the pucks (your pucks may be different; make sure you weigh \
them!) I found that the yellow puck weighed 0.0475 Kg and the magenta puck \
0.0460 Kg. Labeling the ",
 StyleBox["yellow puck 1",
  FontWeight->"Bold"],
 " and the ",
 StyleBox["magenta puck 2",
  FontWeight->"Bold"],
 " we have:"
}], "Text",
 CellChangeTimes->{{3.537013391958778*^9, 3.5370134382306623`*^9}, {
  3.537013790215406*^9, 3.53701380239042*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"m1", "=", "0.0475"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v1ix", "=", 
   RowBox[{"-", "0.111"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v1fx", "=", 
   RowBox[{"-", "0.285"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v1iy", "=", 
   RowBox[{"-", "0.412"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"v1fy", "=", 
    RowBox[{"-", "0.275"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m2", "=", "0.0460"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v2ix", "=", 
   RowBox[{"-", "0.296"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v2fx", "=", 
   RowBox[{"-", "0.0397"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v2iy", "=", 
   RowBox[{"-", "0.187"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"v2fy", "=", 
   RowBox[{"-", "0.363"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.5370134427138557`*^9, 3.537013445705405*^9}, {
  3.5370136297534122`*^9, 3.537013633254355*^9}, {3.537013705840249*^9, 
  3.5370137179461718`*^9}, {3.5370138524582653`*^9, 3.537013989306028*^9}}],

Cell[TextData[{
 "We can now check momentum conservation (remember that we must conserve in \
the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 " directions separately). The units are the standard SI units of  Kg m/s."
}], "Text"],

Cell[BoxData[
 RowBox[{"pix", "=", " ", 
  RowBox[{
   RowBox[{"m1", " ", "v1ix"}], "+", 
   RowBox[{"m2", " ", "v2ix"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"pfx", "=", 
  RowBox[{
   RowBox[{"m1", " ", "v1fx"}], "+", 
   RowBox[{"m2", " ", "v2fx"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"piy", "=", " ", 
  RowBox[{
   RowBox[{"m1", " ", "v1iy"}], "+", 
   RowBox[{"m2", " ", "v2iy"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{"pfy", "=", 
  RowBox[{
   RowBox[{"m1", " ", "v1fy"}], "+", 
   RowBox[{"m2", " ", "v2fy"}]}]}]], "Input"],

Cell[TextData[{
 "To check to see how close the initial and final momentum are we compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["p", "ix"], "-", 
       SubscriptBox["p", "fx"]}], ")"}], 
     SubscriptBox["p", "ix"]], "|"}], TraditionalForm]]],
 "and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    FractionBox[
     RowBox[{"(", 
      RowBox[{
       SubscriptBox["p", "iy"], "-", 
       SubscriptBox["p", "fy"]}], ")"}], 
     SubscriptBox["p", "iy"]], "|"}], TraditionalForm]]],
 ". This shows that we conserve momentum only at the 18% level in the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " direction but that we conserve momentum at the 5% level in the ",
 Cell[BoxData[
  FormBox["y", TraditionalForm]]],
 " direction. The reason we do so badly in the ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " direction is that fit for the magenta disk in the x direction is not very \
good."
}], "Text",
 CellChangeTimes->{{3.537014084778651*^9, 3.53701413648625*^9}, {
  3.5370142334434843`*^9, 3.537014245059738*^9}}],

Cell[BoxData[
 RowBox[{"Abs", "[", 
  FractionBox[
   RowBox[{"pix", "-", "pfx"}], "pix"], "]"}]], "Input",
 CellChangeTimes->{{3.5370142014973087`*^9, 3.537014215352869*^9}, {
  3.648481325758719*^9, 3.648481331704566*^9}}],

Cell[BoxData[
 RowBox[{"Abs", "[", 
  FractionBox[
   RowBox[{"piy", "-", "pfy"}], "piy"], "]"}]], "Input",
 CellChangeTimes->{{3.53701419442524*^9, 3.537014224872861*^9}, {
  3.648481334589642*^9, 3.648481340134068*^9}}],

Cell[TextData[{
 "Another way of expressing the result would be to look at ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        StyleBox[
         SubscriptBox["p", "i"],
         FontWeight->"Bold"], " ", "\[CenterDot]", 
        StyleBox[
         SubscriptBox["p", "i"],
         FontWeight->"Bold"]}], "-", 
       RowBox[{
        StyleBox[
         SubscriptBox["p", "f"],
         FontWeight->"Bold"], "\[CenterDot]", 
        StyleBox[
         SubscriptBox["p", "f"],
         FontWeight->"Bold"]}]}], 
      StyleBox[")",
       FontWeight->"Bold"]}], 
     StyleBox["/",
      FontWeight->"Bold"], 
     StyleBox[
      SubscriptBox["p", "i"],
      FontWeight->"Bold"]}], " ", "\[CenterDot]", 
    StyleBox[
     SubscriptBox["p", "i"],
     FontWeight->"Bold"]}], TraditionalForm]]],
 "where we consider ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     SubscriptBox["p", "i"],
     FontWeight->"Bold"], "and", 
    StyleBox[
     RowBox[{" ", 
      StyleBox[" ",
       FontWeight->"Bold"]}]], 
    StyleBox[
     SubscriptBox["p", "f"],
     FontWeight->"Bold"]}], TraditionalForm]]],
 "as vectors."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pi", "=", 
   RowBox[{"{", 
    RowBox[{"pix", ",", "piy"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pf", "=", 
   RowBox[{"{", 
    RowBox[{"pfx", ",", "pfy"}], "}"}]}], ";"}]}], "Input"],

Cell["\<\
The method weights the small components less and show that we conserve \
momentum to better than 2.5%.\
\>", "Text",
 CellChangeTimes->{{3.537014177271358*^9, 3.5370141826144*^9}}],

Cell[BoxData[
 RowBox[{"Abs", "[", 
  FractionBox[
   RowBox[{
    RowBox[{"pi", ".", "pi"}], "-", 
    RowBox[{"pf", ".", "pf"}]}], 
   RowBox[{"pi", ".", "pi"}]], "]"}]], "Input",
 CellChangeTimes->{{3.648481348515869*^9, 3.6484813579272213`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Angular Momentum", "Subsubsection",
 CellChangeTimes->{{3.6484814306161222`*^9, 3.648481433530816*^9}}],

Cell["\<\
We now turn to the rotational motion of the system. We have already extracted \
the position of the dots above.\
\>", "Text",
 CellChangeTimes->{{3.5370142667906723`*^9, 3.537014285830318*^9}}],

Cell[BoxData[{
 RowBox[{"ListPlot", "[", 
  RowBox[{"GreenData", ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"CyanData", ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Cyan"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.537014379016653*^9, 3.5370143883609867`*^9}, {
  3.537021653224146*^9, 3.537021656695668*^9}, {3.648481439035204*^9, 
  3.64848143928889*^9}}],

Cell["\<\
To recover the rotation rate we need to subtract off the pucks center of mass \
position so the we get the motion relative to the pucks center of mass.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"YellowRotation", "=", 
   RowBox[{"GreenData", "-", "YellowData"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ListLinePlot", "[", 
   RowBox[{"YellowRotation", ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Green"}]}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagentaRotation", "=", 
   RowBox[{"CyanData", "-", "MagentaData"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"MagentaRotation", ",", 
   RowBox[{"PlotStyle", "\[Rule]", "Cyan"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.537014675448702*^9, 3.537014686568701*^9}, {
  3.537020957383368*^9, 3.537020961462769*^9}, {3.537021002647312*^9, 
  3.537021002903864*^9}, {3.5370210532882223`*^9, 3.537021062695691*^9}, {
  3.5370211053206253`*^9, 3.537021124280757*^9}, {3.6484814448208113`*^9, 
  3.648481449900257*^9}}],

Cell[TextData[{
 "The next step is to convert to polar coordinates so that we can plot ",
 Cell[BoxData[
  FormBox[
   RowBox[{"cos", "(", "\[Theta]", ")"}], TraditionalForm]]],
 " as a function of ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]]],
 " where \[Theta] is the angle through which the puck has rotated. Recall \
that ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", 
    RowBox[{
     RowBox[{"r", " ", 
      RowBox[{"cos", "(", "\[Theta]", ")"}], " ", "so", " ", "that", "  ", 
      RowBox[{"cos", "(", "\[Theta]", ")"}]}], "=", 
     RowBox[{
      RowBox[{"x", "/", "r"}], " ", "=", 
      RowBox[{"x", "/", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]}]}]}]}], TraditionalForm]]],
 "."
}], "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"MagentaRotationPolar", "=", 
   RowBox[{"MagentaRotation", "/.", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", 
     RowBox[{"x", "/", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["x", "2"], "+", 
        SuperscriptBox["y", "2"]}]]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"MagentaPuckRotationData", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"TimeData", ",", "MagentaRotationPolar"}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.5370228628416224`*^9, 3.53702286829745*^9}, {
  3.5370230376333303`*^9, 3.537023038280851*^9}, {3.648481458081626*^9, 
  3.648481458464334*^9}}],

Cell["\<\
Plotting this shows how the rotation of the Magenta puck changes as a result \
of the collision.\
\>", "Text",
 CellChangeTimes->{3.537023239918045*^9}],

Cell[BoxData[
 RowBox[{"plotR1", "=", 
  RowBox[{"ListPlot", "[", 
   RowBox[{"MagentaPuckRotationData", ",", 
    RowBox[{"Joined", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 CellChangeTimes->{3.537022895918304*^9, 3.537023040438859*^9}],

Cell["\<\
It is easier to see what is going on if we mark the point at which the \
collision occurred.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"CollisionPoint", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.03`", "]"}], ",", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}], ",", 
       RowBox[{"Point", "[", 
        RowBox[{"{", 
         RowBox[{"0.33`", ",", "0"}], "}"}], "]"}]}], "}"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plotR1", ",", "CollisionPoint"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6484814749789047`*^9, 3.64848147852094*^9}}],

Cell[TextData[{
 "The easiest way to obtain the angular frequency before and after the \
collision is to read them off from the graph. The time difference between the \
peak to peak height is the period ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T", "=", 
    FractionBox[
     RowBox[{"2", "\[Pi]"}], "\[Omega]"]}], TraditionalForm]]],
 ". The peaks I used to find ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "i"], TraditionalForm]]],
 " (before the collision) and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Omega]", "f"], TraditionalForm]]],
 " (after the collision) are marked with blue and green dots respectively."
}], "Text",
 CellChangeTimes->{{3.64848151461119*^9, 3.648481522626162*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"markerPoints", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.025`", "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "1", ",", "0"}], "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"0.038`", ",", "1.01`"}], "}"}], "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"0.284`", ",", "0.942`"}], "}"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"PointSize", "[", "0.025`", "]"}], ",", 
         RowBox[{"RGBColor", "[", 
          RowBox[{"0", ",", "0", ",", "1"}], "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"0.652`", ",", "0.996`"}], "}"}], "]"}], ",", 
         RowBox[{"Point", "[", 
          RowBox[{"{", 
           RowBox[{"1.01`", ",", "1.01`"}], "}"}], "]"}]}], "}"}]}], "}"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plotR1", ",", "CollisionPoint", ",", "markerPoints"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.648481504660412*^9, 3.6484815080271053`*^9}}],

Cell[TextData[{
 "Using these points gives ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "1"], "=", 
    RowBox[{
     RowBox[{"0.25", " ", "sec", " ", "and", " ", 
      SubscriptBox["T", "2"]}], "=", " ", "0.36"}]}], TraditionalForm]]],
 " sec, where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["T", "1"], TraditionalForm]]],
 " is the period before the collision and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "2"], " "}], TraditionalForm]]],
 "is the period after the collision."
}], "Text",
 CellChangeTimes->{{3.648481533110702*^9, 3.648481544215329*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"T1", "=", "0.25"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"T2", "=", "0.36"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Omega]1", "=", 
  RowBox[{"2", 
   RowBox[{"\[Pi]", "/", "T1"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Omega]2", "=", 
  RowBox[{"2", 
   RowBox[{"\[Pi]", "/", "T2"}]}]}]}], "Input"],

Cell["Next, we turn our attention to the Yellow puck.", "Text",
 CellChangeTimes->{3.5370231278455133`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"YellowRotationPolar", "=", 
    RowBox[{"YellowRotation", "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", 
      RowBox[{"x", "/", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["x", "2"], "+", 
         SuperscriptBox["y", "2"]}]]}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"TimeData", ",", "YellowRotationPolar"}], "}"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotLabel", "\[Rule]", "\"\<Yellow Puck Rotation\>\""}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.537023090809456*^9, 3.537023091312695*^9}, {
  3.648481559623312*^9, 3.648481560021216*^9}}],

Cell[TextData[{
 "The initial rotation rate of the Yellow puck is zero.  It's hard to know \
for sure from my data but looks like my puck goes through half a period in \
0.78 second so ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["T", "Yellow"], "=", " ", "1.6"}], TraditionalForm]]],
 " sec."
}], "Text",
 CellChangeTimes->{{3.5370230938599367`*^9, 3.537023093860064*^9}, 
   3.5370231303670588`*^9, {3.6484815714547987`*^9, 3.6484815718637753`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TYellow", "=", "1.6"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"\[Omega]Yellow", "=", 
  RowBox[{"2", 
   RowBox[{"\[Pi]", "/", "TYellow"}]}]}]}], "Input",
 CellChangeTimes->{{3.537023095390419*^9, 3.537023096247427*^9}}],

Cell[TextData[{
 "We will also need the moments of inertia for the pucks. The pucks are disks \
so their moment of inertia is ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", "=", " ", 
    RowBox[{
     FractionBox["1", "2"], " ", "m", " ", 
     SuperscriptBox["r", "2"]}]}], TraditionalForm]]],
 ". The radius of the ",
 "Magenta",
 " puck is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "Magenta"], "=", " ", 
    RowBox[{"0.0345", " ", "meters"}]}], TraditionalForm]]],
 ". The radius of the Yellow puck is ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["r", "Yellow"], "=", 
    RowBox[{"0.044", " ", 
     RowBox[{"meters", "."}]}]}], TraditionalForm]]],
 " Thus "
}], "Text",
 CellChangeTimes->{{3.5370231318323717`*^9, 3.537023135166236*^9}, {
  3.537023241192544*^9, 3.5370232422468767`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"rYellow", "=", " ", "0.044"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rMagenta", "=", "0.0345"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"IYellow", "=", 
  RowBox[{
   FractionBox["1", "2"], "m1", " ", 
   SuperscriptBox["rYellow", "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{"IMagenta", "=", 
  RowBox[{
   FractionBox["1", "2"], " ", "m2", " ", 
   SuperscriptBox["rMagenta", "2"]}]}]}], "Input",
 CellChangeTimes->{
  3.5370229010390863`*^9, 3.537023041575817*^9, 3.5370231057764606`*^9, {
   3.537023136111772*^9, 3.53702313735211*^9}, {3.537023244543748*^9, 
   3.537023245231539*^9}, {3.648481592746499*^9, 3.648481597059238*^9}}],

Cell[TextData[{
 "Remember that the units for I are kg ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["m", "2"], TraditionalForm]]],
 ". We can now calculate the rotation kinetic energies of the pucks."
}], "Text"],

Cell[BoxData[
 RowBox[{"KMagentaInitial", "=", 
  RowBox[{
   FractionBox["1", "2"], " ", "IMagenta", " ", 
   SuperscriptBox["\[Omega]1", "2"]}]}]], "Input",
 CellChangeTimes->{{3.5370229021824493`*^9, 3.53702290304652*^9}, {
  3.537023042414852*^9, 3.5370230426052437`*^9}, {3.648481605900683*^9, 
  3.648481606477182*^9}}],

Cell[BoxData[
 RowBox[{"KMagentaFinial", "=", 
  RowBox[{
   FractionBox["1", "2"], "IMagenta", " ", 
   SuperscriptBox["\[Omega]2", "2"]}]}]], "Input",
 CellChangeTimes->{{3.537022904990056*^9, 3.537022905510425*^9}, {
   3.53702304282135*^9, 3.537023043262285*^9}, 3.648481613610051*^9}],

Cell[BoxData[
 RowBox[{"KYellowFinal", "=", 
  RowBox[{
   FractionBox["1", "2"], " ", "IYellow", " ", 
   SuperscriptBox["\[Omega]Yellow", "2"]}]}]], "Input",
 CellChangeTimes->{{3.537023106551309*^9, 3.537023109383349*^9}, 
   3.648481615638857*^9}],

Cell[TextData[{
 "The position of the ",
 "Magenta",
 " puck relative to the origin is given by PhysicalMagentaPuckCMPosition. \
Recall that ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["L",
     FontWeight->"Bold"], "=", 
    RowBox[{
     RowBox[{
      StyleBox["r",
       FontWeight->"Bold"], "\[Cross]", 
      StyleBox["p",
       FontWeight->"Bold"]}], " ", "+", 
     RowBox[{
      SubscriptBox["I", "Magenta"], " ", 
      SubscriptBox["\[Omega]", "Magenta"], 
      OverscriptBox[
       RowBox[{" ", "z"}], "^"]}]}]}], TraditionalForm]]],
 ". Since the displacement ",
 StyleBox[" ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FontWeight->"Bold"],
 " and the momentum ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FontWeight->"Bold"],
 " are in the same  direction we expect that the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["r",
     FontWeight->"Bold"], "\[Cross]", 
    StyleBox["p",
     FontWeight->"Bold"]}], TraditionalForm]]],
 " term will be zero to within  experimental error.  In order to compute the \
angular momentum we must do two things. We need to make both the momentum \
vector and the position vector three vectors. That is vector in {x,y,z}. The \
reason for this is that the momentum and position have components only in the \
",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "-", "y"}], TraditionalForm]]],
 " plane and thus the angular momentum will point in the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"z", " "}], TraditionalForm]]],
 " direction. In order to get ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " to properly take the cross product we must and a zero component in the ",
 Cell[BoxData[
  FormBox["z", TraditionalForm]]],
 " direction to both ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FontWeight->"Bold"],
 " and",
 StyleBox[" ",
  FontWeight->"Bold"],
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FontWeight->"Bold"],
 "."
}], "Text",
 CellChangeTimes->{
  3.537022908067955*^9, 3.537023043972348*^9, {3.53702324734836*^9, 
   3.53702324981698*^9}}],

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"m2", " ", 
   RowBox[{"{", 
    RowBox[{"v2ix", ",", "v2iy", ",", "0"}], "}"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RMagenta", "=", 
   RowBox[{"MagentaData", "/.", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "0"}], "}"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.537022926751108*^9, 3.537022938966147*^9}, {
   3.537023045175205*^9, 3.537023045751205*^9}, {3.5370235216412783`*^9, 
   3.53702352866398*^9}, 3.5370235903607807`*^9}],

Cell[TextData[{
 " The other thing that we need to do is to shift the origin of ",
 Cell[BoxData[
  FormBox[
   StyleBox["r",
    FontWeight->"Bold"], TraditionalForm]]],
 " so that the pucks position starts at {0,0}. We need both ",
 Cell[BoxData[
  FormBox[
   StyleBox["p",
    FontWeight->"Bold"], TraditionalForm]]],
 " and ",
 Cell[BoxData[
  FormBox[
   StyleBox["r",
    FontWeight->"Bold"], TraditionalForm]]],
 " to be measured from the same origin. Since the origin of ",
 Cell[BoxData[
  FormBox[
   StyleBox["p",
    FontWeight->"Bold"], TraditionalForm]]],
 " is {0,0} we will shift ",
 Cell[BoxData[
  FormBox[
   StyleBox["r",
    FontWeight->"Bold"], TraditionalForm]]],
 " so that it's origin is also at {0,0}. We can do this simply be subtracting \
the first element of ",
 Cell[BoxData[
  FormBox[
   StyleBox["r",
    FontWeight->"Bold"], TraditionalForm]]],
 " from each element of the list."
}], "Text"],

Cell[BoxData[
 RowBox[{"r", "=", 
  RowBox[{"RMagenta", "/.", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "\[Rule]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x", ",", "y", ",", "z"}], "}"}], "-", 
     RowBox[{"First", "[", "RMagenta", "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.5370229396550493`*^9, 3.537022940287664*^9}, {
  3.537023046423441*^9, 3.53702304688789*^9}}],

Cell[TextData[{
 "The next step is to compute the cross product. We have two lists (",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],
  FontWeight->"Bold"],
 " and ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FontWeight->"Bold",
  FontVariations->{"CompatibilityType"->0}],
 "). The elements of ",
 Cell[BoxData[
  FormBox[
   StyleBox["r",
    FontWeight->"Bold"], TraditionalForm]]],
 " are themselves three element lists representing a three vector. We want to \
take the cross product of each element of ",
 Cell[BoxData[
  FormBox[
   StyleBox["r",
    FontWeight->"Bold"], TraditionalForm]]],
 " with  ",
 Cell[BoxData[
  FormBox[
   StyleBox["p",
    FontWeight->"Bold"], TraditionalForm]]],
 ". To take the cross product of two vectors in ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[DoubleStruckCapitalR]", "3"], TraditionalForm]]],
 "we can use ",
 ButtonBox["Cross",
  BaseStyle->"RefGuideLink"],
 ". For example: "
}], "Text"],

Cell[BoxData[
 RowBox[{"Cross", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x2", ",", "y2", ",", "z2"}], "}"}]}], "]"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["A digression for ",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["Mathematica",
  FontSlant->"Italic",
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" Geeks, others may skip down",
  FontColor->RGBColor[1, 0, 0]]
}], "Subsubsection",
 CellChangeTimes->{3.648481684365258*^9}],

Cell[TextData[{
 "However, what we have are a list of vectors and a vector. We can not apply ",
 StyleBox["Cross",
  FontWeight->"Bold"],
 " directly to our list because we want the first argument to ",
 StyleBox["Cross",
  FontWeight->"Bold"],
 " to be a vector from the list of vectors in ",
 StyleBox["r",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " and the second argument to be the vector  ",
 StyleBox["p",
  FontWeight->"Bold",
  FontSlant->"Italic"],
 " . We can do this using ",
 ButtonBox["Map",
  BaseStyle->"RefGuideLink"],
 ".  The function Map maps functions across lists. For example:"
}], "Text"],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input"],

Cell["maps the function f across the list.", "Text"],

Cell[TextData[{
 "Now consider two symbolic lists. The first list \"list1\" has the same \
structure as ",
 Cell[BoxData[
  FormBox[
   StyleBox["r",
    FontWeight->"Bold"], TraditionalForm]]],
 ". It is a list of three element list. The second list \"vector\" is just a \
three element list. "
}], "Text"],

Cell[BoxData[
 RowBox[{"list1", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a1", ",", "b1", ",", "c1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a2", ",", "b2", ",", "c2"}], "}"}]}], "}"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"vector", "=", 
  RowBox[{"{", 
   RowBox[{"x1", ",", "y1", ",", "z1"}], "}"}]}]], "Input"],

Cell["\<\
We can not just use Map since Cross takes two arguments, one of which we want \
to be constant. The code below will do what we want.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cross", "[", 
     RowBox[{"#", ",", "vector"}], "]"}], "&"}], ",", "list1"}], 
  "]"}]], "Input",
 CellChangeTimes->{3.536417466770648*^9, 3.537023047374161*^9, 
  3.537023628664598*^9}],

Cell[TextData[{
 "You will notice two odd things about this code. The # sign and the &. The # \
represents an argument to a pure ",
 ButtonBox["Function",
  BaseStyle->"RefGuideLink"],
 " and the & tags the function as a pure function. An example or two will \
make things much clearer. Suppose I want to write a function that squares its \
arguments. One way to do this is"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", "x_", "]"}], ":=", 
  SuperscriptBox["x", "2"]}]], "Input"],

Cell[BoxData[
 RowBox[{"h", "[", "12", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"h", "[", 
  RowBox[{"1", "+", "y"}], "]"}]], "Input"],

Cell["\<\
This is a named function. I called it h. A pure function has no name. To do \
the same thing using a pure function we write\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["#", "2"], "&"}], "[", "x", "]"}]], "Input"],

Cell["\<\
The syntax tells the kernel to take whatever is in the square brackets and \
square it.The & tells the kernel that we have a pure function. If we leave it \
out we get\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["#", "2"], "[", "x", "]"}]], "Input"],

Cell["Here is a slightly more complicated example:", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["#", "3"], "+", "#"}], ")"}], "&"}], "[", 
  RowBox[{"1", "+", "z"}], "]"}]], "Input"],

Cell["\<\
Why, you ask would we ever want to do this? Pure functions are not very \
useful by themselves but are very powerful when combined with Map. Let us go \
back to our to lists; \"list1\" and \"vector\".\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"#", ",", "vector"}], "]"}], "&"}], ",", "list1"}], 
  "]"}]], "Input"],

Cell["\<\
Notice that if the function f was the cross product we would get exactly what \
we want,\
\>", "Text",
 CellChangeTimes->{3.537023654036827*^9}],

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Cross", "[", 
     RowBox[{"#", ",", "vector"}], "]"}], "&"}], ",", "list1"}], 
  "]"}]], "Input"],

Cell["\<\
that is we have taken the cross product of each vector in the list \"list1\" \
with the vector \"vector\".\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Back to the angular momentum", "Subsubsection"],

Cell[TextData[{
 "The same method will allows use to compute the angular momentum. We are \
interested in only the first 11 elements of ",
 Cell[BoxData[
  FormBox[
   StyleBox["r",
    FontWeight->"Bold"], TraditionalForm]]],
 " since they are the elements that refer to the position before the \
collision."
}], "Text"],

Cell[BoxData[
 RowBox[{"LMagenta", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cross", "[", 
      RowBox[{"#", ",", "p"}], "]"}], "&"}], ",", 
    RowBox[{"Take", "[", 
     RowBox[{"r", ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "11"}], "}"}]}], "]"}]}], "]"}]}]], "Input",
 CellDingbat->"\[GrayCircle]",
 CellChangeTimes->{3.537022943462961*^9, 3.537023047855859*^9}],

Cell[TextData[{
 "Notice that as expected the angular momentum from the term ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["r",
     FontWeight->"Bold"], "\[Cross]", 
    StyleBox["p",
     FontWeight->"Bold"]}], TraditionalForm]]],
 " is essentially zero. The largest values are an order of magnitude smaller \
than the contribution from the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", " ", "\[Omega]"}], TraditionalForm]]],
 " term. The contribution from the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", " ", "\[Omega]"}], TraditionalForm]]],
 " term is:"
}], "Text",
 CellChangeTimes->{{3.4722538353900003`*^9, 3.4722538373190002`*^9}, {
  3.5370231386319017`*^9, 3.5370231457172956`*^9}}],

Cell[BoxData[
 RowBox[{"IMagenta", " ", "\[Omega]1"}]], "Input",
 CellChangeTimes->{3.537022945028817*^9, 3.537023048413054*^9}],

Cell["\<\
and this is the only term that contributes to the initial angular momentum.  \
Thus we have \
\>", "Text"],

Cell[BoxData[
 RowBox[{"Li", "=", 
  RowBox[{"IMagenta", " ", "\[Omega]1"}]}]], "Input",
 CellChangeTimes->{3.537022946789006*^9, 3.537023050405438*^9}],

Cell[TextData[{
 "After the collision we have four terms. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["L", "total"], "=", " ", 
    RowBox[{
     RowBox[{
      SubscriptBox["I", "Magentaf"], " ", 
      SubscriptBox["\[Omega]", "Magentaf"], 
      OverscriptBox["z", "^"]}], "+", 
     RowBox[{
      SubscriptBox["I", "Yellowf"], " ", 
      SubscriptBox["\[Omega]", "Yellowf"], 
      OverscriptBox["z", "^"]}], "+", 
     RowBox[{
      SubscriptBox[
       StyleBox["r",
        FontWeight->"Bold"], "Yellowf"], "\[Cross]", 
      SubscriptBox[
       StyleBox["p",
        FontWeight->"Bold"], "Yellowf"]}], "+", 
     RowBox[{
      SubscriptBox[
       StyleBox["r",
        FontWeight->"Bold"], "Yellowf"], "\[Cross]", 
      SubscriptBox[
       StyleBox["p",
        FontWeight->"Bold"], "Yellowf"]}]}]}], TraditionalForm]]],
 ", where the ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " refers to the final state (i.e. after the collision). The rotational (",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", " ", "\[Omega]"}], TraditionalForm]]],
 ") terms give "
}], "Text",
 CellChangeTimes->{{3.537023154966786*^9, 3.5370231610133753`*^9}, {
  3.537023254467585*^9, 3.537023255135215*^9}}],

Cell[BoxData[
 RowBox[{"IMagenta", " ", "\[Omega]2"}]], "Input",
 CellChangeTimes->{3.537022947612525*^9, 3.537023050773332*^9}],

Cell[BoxData[
 RowBox[{"IYellow", " ", "\[Omega]Yellow"}]], "Input",
 CellChangeTimes->{{3.537023162173607*^9, 3.537023162726022*^9}}],

Cell["\<\
In order to decide of these terms point in the positive or negative \
z-direction you will have to look at the video and see if they are rotating \
in the clockwise (negative z axis) or counter-clockwise (positive z-axis) \
direction. In my case they are both clockwise.\
\>", "Text"],

Cell[BoxData[
 RowBox[{"Lrot", "=", 
  RowBox[{
   RowBox[{"IMagenta", " ", "\[Omega]2"}], "+", 
   RowBox[{"IYellow", " ", "\[Omega]Yellow"}]}]}]], "Input",
 CellChangeTimes->{
  3.537022950838023*^9, 3.5370230511498547`*^9, {3.53702316354284*^9, 
   3.5370231641017437`*^9}}],

Cell[TextData[{
 "Notice that the rotational angular momentum is conserved to with in about \
4%. \n\n",
 StyleBox["However, there is no requirement that the ",
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox["I\[Omega]", TraditionalForm]],
  FontColor->RGBColor[1, 0, 0]],
 StyleBox[" pieces and the ",
  FontColor->RGBColor[1, 0, 0]],
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["r",
     FontWeight->"Bold"], "\[Cross]", 
    StyleBox["p",
     FontWeight->"Bold"], " "}], TraditionalForm]],
  FontColor->RGBColor[1, 0, 0]],
 StyleBox["terms be separately conserved. Only the total angular momentum \
need be conserved.",
  FontColor->RGBColor[1, 0, 0]]
}], "Text",
 CellChangeTimes->{{3.648481711811665*^9, 3.64848171219064*^9}}],

Cell[BoxData[
 RowBox[{"100", " ", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"Li", "-", "Lrot"}], "]"}], "/", "Li"}]}]], "Input"],

Cell[TextData[{
 "In order to check the  ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["r",
     FontWeight->"Bold"], "\[Cross]", 
    StyleBox["p",
     FontWeight->"Bold"], " "}], TraditionalForm]]],
 "terms we must shift the origin of the Yellow puck position so that we are \
measuring the positions of the Yellow puck from the same origin as the ",
 "Magenta",
 " puck. This is done in the code below."
}], "Text",
 CellChangeTimes->{{3.5370231649353724`*^9, 3.537023168111484*^9}, 
   3.537023260911573*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"RYellow", "=", 
    RowBox[{"YellowData", "/.", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x_", ",", "y_"}], "}"}], "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "0"}], "}"}]}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"RYellowShifted", "=", 
  RowBox[{"RYellow", "/.", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", "z"}], "}"}], "-", 
      RowBox[{"First", "[", "RMagenta", "]"}]}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.537023172391097*^9, 3.537023172903722*^9}, {
  3.5370236825047617`*^9, 3.537023687416304*^9}, {3.648481720980022*^9, 
  3.648481721278616*^9}}],

Cell["\<\
We will also need the final momentums of the Yellow and Magenta pucks.\
\>", "Text",
 CellChangeTimes->{3.53702317653347*^9, 3.537023262573504*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pMagentaf", "=", 
   RowBox[{"m2", 
    RowBox[{"{", 
     RowBox[{"v2fx", ",", "v2fy", ",", "0"}], "}"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"pYellowf", "=", 
  RowBox[{"m1", 
   RowBox[{"{", 
    RowBox[{"v1fx", ",", "v1fy", ",", "0"}], "}"}]}]}]}], "Input",
 CellChangeTimes->{
  3.5370229539421387`*^9, 3.537023052773978*^9, {3.648481742826198*^9, 
   3.648481743173093*^9}}],

Cell[TextData[{
 "We can now compute the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["r",
     FontWeight->"Bold"], "\[Cross]", 
    StyleBox["p",
     FontWeight->"Bold"]}], TraditionalForm]]],
 " terms for both pucks. We expect them to be constant but not zero. "
}], "Text",
 CellChangeTimes->{3.648482054063953*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"LMagentaf", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Cross", "[", 
       RowBox[{"#", ",", "pMagentaf"}], "]"}], "&"}], ",", 
     RowBox[{"Take", "[", 
      RowBox[{"r", ",", 
       RowBox[{"{", 
        RowBox[{"12", ",", "44"}], "}"}]}], "]"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"LYellowf", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Cross", "[", 
      RowBox[{"#", ",", "pYellowf"}], "]"}], "&"}], ",", 
    RowBox[{"Take", "[", 
     RowBox[{"RYellowShifted", ",", 
      RowBox[{"{", 
       RowBox[{"12", ",", "44"}], "}"}]}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.537022990214954*^9, 3.537022990911438*^9}, {
  3.537023054136015*^9, 3.5370230546718693`*^9}, {3.648481737817316*^9, 
  3.6484817382081623`*^9}}],

Cell["\<\
The plot below is deceiving. The points look scattered but look at the scale.\
\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"plotL1", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"LYellowf", "/.", "\[InvisibleSpace]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "\[Rule]", "z"}]}], ",", 
     
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Frame #\>\"", ",", "\"\<L\>\""}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"plotL2", "=", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"LMagentaf", "/.", "\[InvisibleSpace]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "\[Rule]", "z"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<Frame #\>\"", ",", "\"\<L\>\""}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"RGBColor", "[", 
        RowBox[{"1", ",", "0", ",", "0"}], "]"}]}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"plotL1", ",", "plotL2"}], "]"}]}], "Input",
 CellChangeTimes->{
  3.537023183648891*^9, {3.648481749605048*^9, 3.648481768493038*^9}}],

Cell[TextData[{
 "Shown on the same plot, we see that the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["r",
     FontWeight->"Bold"], "\[Cross]", 
    StyleBox["p",
     FontWeight->"Bold"], " "}], TraditionalForm]]],
 "terms are constant after the collision as they must be since after the \
collision there are no external torques. "
}], "Text",
 CellChangeTimes->{{3.648481771877952*^9, 3.648481774791679*^9}}],

Cell[TextData[{
 "Since the total angular momentum must be conserved and the ",
 Cell[BoxData[
  FormBox[
   RowBox[{"I", " ", "\[Omega]"}], TraditionalForm]]],
 " pieces were conserved separately we expect L",
 "Yellow",
 "f and LMagentaf to cancel. We can see from the graph that they have \
opposite signs. Adding them gives"
}], "Text",
 CellChangeTimes->{{3.472253920818*^9, 3.472253922329*^9}, 
   3.537022994294321*^9, 3.537023056798558*^9, 3.537023185342585*^9}],

Cell[BoxData[
 RowBox[{"LA", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"LYellowf", "+", "LMagentaf"}], ")"}], "/.", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "\[Rule]", 
    "z"}]}]}]], "Input",
 CellChangeTimes->{
  3.537022997694272*^9, 3.537023059215651*^9, 3.537023186518849*^9, {
   3.648482044077488*^9, 3.6484820441993103`*^9}}],

Cell[TextData[{
 "This looks small but small compared to what? Whenever we say something is \
small we need to compare it with something, and we would like the comparison \
to be dimensionless (otherwise we could make it large or small just by \
changing from meters to millimeters, for example). \n\nThe relevant quantity \
to compare to is the norm of LYellowf (or LMagentaf). Remember the norm of a \
vector ",
 StyleBox["v",
  FontWeight->"Bold"],
 " is ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     StyleBox["v",
      FontWeight->"Bold"], ".", 
     StyleBox["v",
      FontWeight->"Bold"]}]], TraditionalForm]]],
 " and tells us the vector length or magnitude."
}], "Text",
 CellChangeTimes->{{3.47225394737*^9, 3.4722539604779997`*^9}, {
   3.472253993349*^9, 3.472254002741*^9}, 3.537022999048952*^9, 
   3.537023060104064*^9, {3.537023189152206*^9, 3.537023191040653*^9}, {
   3.537023282823616*^9, 3.537023283460533*^9}, {3.648482016485552*^9, 
   3.6484820300787888`*^9}}],

Cell[BoxData[
 RowBox[{"norm", "=", 
  RowBox[{"\[Sqrt]", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"LYellowf", "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "\[Rule]", "z"}]}], 
      ")"}], ".", 
     RowBox[{"(", 
      RowBox[{"LYellowf", "/.", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x_", ",", "y_", ",", "z_"}], "}"}], "\[Rule]", "z"}]}], 
      ")"}]}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.537023195433042*^9, 3.537023196200597*^9}, {
  3.648482038903102*^9, 3.648482041890849*^9}}],

Cell[TextData[{
 "La/norm is a dimensionless quantity that we can compare to 1 since in the \
absence of any conservation we would expect it to be of order 1. Doing the \
comparison shows that it is indeed small and the ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["r",
     FontWeight->"Bold"], "\[Cross]", 
    StyleBox["p",
     FontWeight->"Bold"], " "}], TraditionalForm]]],
 "terms are separately conserved.",
 StyleBox[" Remember that this separate conservation  may not be true for \
your data.",
  FontColor->RGBColor[1, 0, 0]]
}], "Text"],

Cell[BoxData[
 RowBox[{"LA", "/", "norm"}]], "Input"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Upshot", "Section",
 CellChangeTimes->{{3.6284542746729174`*^9, 3.628454275306368*^9}}],

Cell[TextData[{
 "This is a rough outline of the experiment.  ",
 StyleBox["This is not necessarily a complete list of what needs to be done.",
  
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.6284624428861613`*^9, 3.6284624767448487`*^9}}],

Cell["1) There are a lot of steps!", "Text",
 CellChangeTimes->{{3.6284544335639277`*^9, 3.628454457198105*^9}, {
  3.648481811652027*^9, 3.6484818145030317`*^9}},
 Hyphenation->False],

Cell["2) ", "Text",
 CellChangeTimes->{
  3.502555551465073*^9, {3.6284544363749237`*^9, 3.628454438334324*^9}, 
   3.648481817292975*^9},
 Hyphenation->False],

Cell["3) ", "Text",
 CellChangeTimes->{{3.6284544912308345`*^9, 3.62845452679825*^9}, 
   3.648481819356556*^9},
 Hyphenation->False],

Cell["4) ", "Text",
 CellChangeTimes->{{3.6284545984208736`*^9, 3.628454598969263*^9}, 
   3.648481821849505*^9},
 Hyphenation->False]
}, Open  ]],

Cell[CellGroupData[{

Cell["Assignment", "Section",
 CellChangeTimes->{{3.628454290604247*^9, 3.628454291655995*^9}}],

Cell[TextData[{
 "The assignment for Week 12 is a ",
 StyleBox["full Lab Report",
  FontVariations->{"Underline"->True}],
 " which addresses all relevant questions and results from this writeup, and \
reflects on each.  This report should be written in accordance with the \
general rules and guidelines of the Syllabus for this course; please ask if \
there are any questions about what specifically is required."
}], "Text",
 CellChangeTimes->{{3.628454296007019*^9, 3.628454369195117*^9}, 
   3.6284544847662344`*^9, {3.6284545416807847`*^9, 3.628454544563869*^9}, {
   3.628462525591489*^9, 3.628462552005452*^9}, 3.648481836443892*^9}]
}, Open  ]]
}, Open  ]]
},
AutoGeneratedPackage->Automatic,
WindowToolbars->"RulerBar",
WindowSize->{832, 993},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
PrivateNotebookOptions->{"VersionedStylesheet"->{"Default.nb"[8.] -> False}},
ShowSelection->True,
FrontEndVersion->"10.0 for Linux x86 (64-bit) (September 9, 2014)",
StyleDefinitions->FrontEnd`FileName[{"Report"}, "StandardReport.nb", 
  CharacterEncoding -> "UTF-8"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 246, 7, 214, "Title"],
Cell[671, 24, 170, 3, 55, "Text"],
Cell[CellGroupData[{
Cell[866, 31, 28, 0, 35, "Subsection"],
Cell[CellGroupData[{
Cell[919, 35, 99, 1, 33, "Subsubsection"],
Cell[1021, 38, 2001, 46, 319, "Text"],
Cell[3025, 86, 20234, 815, 299, 17467, 768, "GraphicsData", "PostScript", \
"Graphics"]
}, Closed]],
Cell[CellGroupData[{
Cell[23296, 906, 40, 0, 33, "Subsubsection"],
Cell[23339, 908, 2224, 51, 341, "Text"],
Cell[25566, 961, 674, 19, 64, "Input"],
Cell[26243, 982, 5265, 170, 568, "Text"],
Cell[31511, 1154, 360, 12, 43, "Input"],
Cell[CellGroupData[{
Cell[31896, 1170, 311, 9, 64, "Input"],
Cell[32210, 1181, 429, 13, 41, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32676, 1199, 100, 2, 41, "Input"],
Cell[32779, 1203, 1303, 37, 167, "Output"]
}, Open  ]],
Cell[34097, 1243, 570, 17, 77, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[34704, 1265, 30, 0, 33, "Subsubsection"],
Cell[34737, 1267, 8077, 252, 781, "Text"],
Cell[42817, 1521, 1205, 35, 221, "Text"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44071, 1562, 126, 2, 35, "Subsection"],
Cell[CellGroupData[{
Cell[44222, 1568, 109, 1, 33, "Subsubsection"],
Cell[44334, 1571, 1146, 18, 165, "Text"],
Cell[45483, 1591, 139, 4, 38, "Text"],
Cell[45625, 1597, 1289, 21, 275, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[46951, 1623, 124, 1, 33, "Subsubsection"],
Cell[47078, 1626, 967, 18, 121, "Text"],
Cell[48048, 1646, 402, 6, 151, "Text"],
Cell[48453, 1654, 894, 24, 130, "Input"],
Cell[49350, 1680, 451, 7, 77, "Text"],
Cell[49804, 1689, 601, 16, 108, "Input"],
Cell[50408, 1707, 1007, 17, 143, "Text"],
Cell[51418, 1726, 217, 5, 41, "Input"],
Cell[51638, 1733, 195, 4, 33, "Text"],
Cell[51836, 1739, 575, 14, 108, "Input"],
Cell[52414, 1755, 474, 11, 64, "Input"],
Cell[52891, 1768, 453, 10, 64, "Input"],
Cell[53347, 1780, 238, 4, 55, "Text"],
Cell[53588, 1786, 88, 2, 41, "Input"]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[53725, 1794, 35, 0, 35, "Subsection"],
Cell[CellGroupData[{
Cell[53785, 1798, 96, 1, 33, "Subsubsection"],
Cell[53884, 1801, 831, 29, 99, "Text"],
Cell[54718, 1832, 1376, 42, 108, "Input"],
Cell[56097, 1876, 73, 0, 33, "Text"],
Cell[56173, 1878, 1237, 30, 152, "Input"],
Cell[57413, 1910, 2208, 71, 167, "Text"],
Cell[59624, 1983, 751, 20, 108, "Input"],
Cell[60378, 2005, 143, 1, 33, "Text"],
Cell[60524, 2008, 314, 5, 64, "Input"],
Cell[60841, 2015, 719, 22, 77, "Text"],
Cell[61563, 2039, 712, 19, 86, "Input"],
Cell[62278, 2060, 4538, 81, 248, "Input"],
Cell[66819, 2143, 223, 6, 33, "Text"],
Cell[67045, 2151, 469, 9, 64, "Input"],
Cell[67517, 2162, 707, 19, 86, "Input"],
Cell[68227, 2183, 137, 1, 33, "Text"],
Cell[68367, 2186, 471, 9, 64, "Input"],
Cell[68841, 2197, 685, 19, 86, "Input"],
Cell[69529, 2218, 166, 2, 33, "Text"],
Cell[69698, 2222, 468, 9, 64, "Input"],
Cell[70169, 2233, 262, 9, 35, "Text"],
Cell[70434, 2244, 686, 19, 86, "Input"],
Cell[71123, 2265, 143, 2, 33, "Text"],
Cell[71269, 2269, 789, 17, 196, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[72095, 2291, 106, 1, 33, "Subsubsection"],
Cell[72204, 2294, 454, 12, 77, "Text"],
Cell[72661, 2308, 1161, 33, 262, "Input"],
Cell[73825, 2343, 298, 9, 55, "Text"],
Cell[74126, 2354, 135, 4, 41, "Input"],
Cell[74264, 2360, 130, 4, 41, "Input"],
Cell[74397, 2366, 135, 4, 41, "Input"],
Cell[74535, 2372, 130, 4, 41, "Input"],
Cell[74668, 2378, 1121, 34, 142, "Text"],
Cell[75792, 2414, 224, 5, 67, "Input"],
Cell[76019, 2421, 221, 5, 67, "Input"],
Cell[76243, 2428, 1196, 47, 55, "Text"],
Cell[77442, 2477, 245, 8, 64, "Input"],
Cell[77690, 2487, 190, 4, 55, "Text"],
Cell[77883, 2493, 249, 7, 67, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[78169, 2505, 109, 1, 33, "Subsubsection"],
Cell[78281, 2508, 203, 4, 55, "Text"],
Cell[78487, 2514, 484, 10, 64, "Input"],
Cell[78974, 2526, 175, 3, 55, "Text"],
Cell[79152, 2531, 889, 19, 130, "Input"],
Cell[80044, 2552, 786, 25, 98, "Text"],
Cell[80833, 2579, 717, 20, 87, "Input"],
Cell[81553, 2601, 162, 4, 33, "Text"],
Cell[81718, 2607, 238, 5, 41, "Input"],
Cell[81959, 2614, 116, 3, 33, "Text"],
Cell[82078, 2619, 612, 16, 108, "Input"],
Cell[82693, 2637, 712, 19, 110, "Text"],
Cell[83408, 2658, 1265, 33, 174, "Input"],
Cell[84676, 2693, 599, 20, 55, "Text"],
Cell[85278, 2715, 355, 10, 108, "Input"],
Cell[85636, 2727, 107, 1, 33, "Text"],
Cell[85746, 2730, 819, 23, 131, "Input"],
Cell[86568, 2755, 464, 11, 55, "Text"],
Cell[87035, 2768, 258, 6, 64, "Input"],
Cell[87296, 2776, 827, 27, 88, "Text"],
Cell[88126, 2805, 685, 16, 159, "Input"],
Cell[88814, 2823, 214, 6, 55, "Text"],
Cell[89031, 2831, 325, 7, 65, "Input"],
Cell[89359, 2840, 289, 6, 65, "Input"],
Cell[89651, 2848, 251, 6, 65, "Input"],
Cell[89905, 2856, 2084, 71, 191, "Text"],
Cell[91992, 2929, 138, 4, 41, "Input"],
Cell[92133, 2935, 449, 11, 41, "Input"],
Cell[92585, 2948, 926, 33, 99, "Text"],
Cell[93514, 2983, 420, 11, 41, "Input"],
Cell[93937, 2996, 954, 34, 99, "Text"],
Cell[94894, 3032, 205, 6, 41, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[95136, 3043, 297, 9, 33, "Subsubsection"],
Cell[95436, 3054, 617, 19, 99, "Text"],
Cell[96056, 3075, 138, 4, 41, "Input"],
Cell[96197, 3081, 52, 0, 33, "Text"],
Cell[96252, 3083, 307, 9, 55, "Text"],
Cell[96562, 3094, 228, 7, 41, "Input"],
Cell[96793, 3103, 114, 3, 41, "Input"],
Cell[96910, 3108, 156, 3, 55, "Text"],
Cell[97069, 3113, 259, 8, 41, "Input"],
Cell[97331, 3123, 386, 8, 77, "Text"],
Cell[97720, 3133, 103, 3, 43, "Input"],
Cell[97826, 3138, 55, 1, 41, "Input"],
Cell[97884, 3141, 77, 2, 41, "Input"],
Cell[97964, 3145, 147, 3, 55, "Text"],
Cell[98114, 3150, 97, 3, 43, "Input"],
Cell[98214, 3155, 191, 4, 55, "Text"],
Cell[98408, 3161, 78, 2, 43, "Input"],
Cell[98489, 3165, 60, 0, 33, "Text"],
Cell[98552, 3167, 171, 6, 46, "Input"],
Cell[98726, 3175, 224, 4, 55, "Text"],
Cell[98953, 3181, 166, 6, 41, "Input"],
Cell[99122, 3189, 154, 4, 33, "Text"],
Cell[99279, 3195, 170, 6, 41, "Input"],
Cell[99452, 3203, 130, 3, 33, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[99619, 3211, 53, 0, 33, "Subsubsection"],
Cell[99675, 3213, 321, 9, 55, "Text"],
Cell[99999, 3224, 402, 12, 42, "Input"],
Cell[100404, 3238, 701, 21, 77, "Text"],
Cell[101108, 3261, 128, 2, 41, "Input"],
Cell[101239, 3265, 116, 3, 33, "Text"],
Cell[101358, 3270, 152, 3, 41, "Input"],
Cell[101513, 3275, 1220, 39, 81, "Text"],
Cell[102736, 3316, 128, 2, 41, "Input"],
Cell[102867, 3320, 134, 2, 41, "Input"],
Cell[103004, 3324, 294, 5, 77, "Text"],
Cell[103301, 3331, 277, 7, 41, "Input"],
Cell[103581, 3340, 750, 22, 99, "Text"],
Cell[104334, 3364, 135, 4, 41, "Input"],
Cell[104472, 3370, 521, 15, 77, "Text"],
Cell[104996, 3387, 816, 23, 86, "Input"],
Cell[105815, 3412, 157, 3, 33, "Text"],
Cell[105975, 3417, 445, 13, 86, "Input"],
Cell[106423, 3432, 329, 11, 33, "Text"],
Cell[106755, 3445, 864, 25, 86, "Input"],
Cell[107622, 3472, 103, 3, 33, "Text"],
Cell[107728, 3477, 1190, 33, 130, "Input"],
Cell[108921, 3512, 422, 12, 55, "Text"],
Cell[109346, 3526, 470, 11, 77, "Text"],
Cell[109819, 3539, 378, 11, 41, "Input"],
Cell[110200, 3552, 997, 24, 147, "Text"],
Cell[111200, 3578, 588, 18, 44, "Input"],
Cell[111791, 3598, 557, 15, 99, "Text"],
Cell[112351, 3615, 53, 1, 41, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[112453, 3622, 93, 1, 69, "Section"],
Cell[112549, 3625, 251, 6, 55, "Text"],
Cell[112803, 3633, 184, 3, 33, "Text"],
Cell[112990, 3638, 159, 4, 33, "Text"],
Cell[113152, 3644, 133, 3, 33, "Text"],
Cell[113288, 3649, 134, 3, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113459, 3657, 95, 1, 69, "Section"],
Cell[113557, 3660, 640, 11, 99, "Text"]
}, Open  ]]
}, Open  ]]
}
]
*)

